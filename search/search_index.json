{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Installation And Usage Guide OneGPIO Scratch 3 Extensions For Raspberry Pi Pico, Arduino, Raspberry Pi, ESP-8266, Picoboard, Circuit Playground Express And RoboHAT MM1 Control your favorite physical computing device using Scratch 3. Windows, Mac, and Linux , including Raspberry Pi , are supported. Launch Scratch 3 via the internet or locally on your computer. Control your Raspberry Pi or a Raspberry Pi/RoboHAT combination either locally or from your PC. Last Updated: May 7 2021 s3-extend v1.14 s3onegpio v1.15 Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Welcome"},{"location":"acks/","text":"A Simple Expression Of Thanks This project would not have been possible without the help of Hiro Osaki and Edson Sidnei Sobreira, and indirectly, Seiji Matsushita. Hiro wrote an excellent article, \"How to Develop Your Own Block for Scratch 3.0\" , that demystified the Scratch 3 Extension Specification. In addition, he unselfishly provided some personal guidance. Edson provided some early testing and guidance that resulted in simplifying the user's interaction with the OneGPIO extensions. Also, he pointed me to the work of Seiji Matsushita, who implemented language translation. The translation code I implemented is based on Seiji's work. Edson curates the HackEduca Web site. Language Translation Acknowledgements Brazilian Portuguese and Portuguese: Edson Sidnei Sobreira French: Florian Becard And Francois MOCQ Chinese: https://gasolin.idv.tw/ , Justina Hsu Polish: Tomasz Regdos Japanese : KigenHasebe German: christianimmler Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Thank You"},{"location":"acks/#a-simple-expression-of-thanks","text":"This project would not have been possible without the help of Hiro Osaki and Edson Sidnei Sobreira, and indirectly, Seiji Matsushita. Hiro wrote an excellent article, \"How to Develop Your Own Block for Scratch 3.0\" , that demystified the Scratch 3 Extension Specification. In addition, he unselfishly provided some personal guidance. Edson provided some early testing and guidance that resulted in simplifying the user's interaction with the OneGPIO extensions. Also, he pointed me to the work of Seiji Matsushita, who implemented language translation. The translation code I implemented is based on Seiji's work. Edson curates the HackEduca Web site.","title":"A Simple Expression Of Thanks"},{"location":"acks/#language-translation-acknowledgements","text":"Brazilian Portuguese and Portuguese: Edson Sidnei Sobreira French: Florian Becard And Francois MOCQ Chinese: https://gasolin.idv.tw/ , Justina Hsu Polish: Tomasz Regdos Japanese : KigenHasebe German: christianimmler Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Language Translation Acknowledgements"},{"location":"ard_blocks/","text":"The Arduino Uno Blocks The blocks consist of a set of command blocks that are rectangular in shape and reporter blocks rounded in shape. Command Blocks Write Digital This block allows you to select a pin and set its output to either a one or zero. It has two parameters. The first is a drop-down list of valid PINs. The second parameter is the output value. It also is a drop-down list and contains the values zero and one. Write PWM This block allows you to select a pin and set its PWM output to be a value between 0 and 100%. It has two parameters. The first is a drop-down list of valid PINs. The second parameter allows you to fill in a PWM value. If you use a PWM value of less than zero, it will be set to 0 internally. If you set the value to greater than 100, it will be set to 100. Tone If you connect a Piezo type buzzer to a pin, this block will generate a tone on the pin for the frequency and duration specified. It contains three parameters. The first is a drop-down list of valid PINs. The second allows you to specify the frequency of the tone in Herz. The third parameter specifies the tone duration in milliseconds. If a value greater than 5000 is entered, the value will be set to 5000 internally, limiting the maximum playing time to 5 seconds. Write Servo This block allows you to control the angle of a servo motor. It contains two parameters. The first is a drop-down list of valid PINs. The second specifies the angle in degrees. The value is limited to be between 0 and 180. Reporter Blocks Read Digital This block allows you to read the current state of a digital input pin. It has one parameter, a drop-down list containing all the valid PINs. It reports a value of zero or one. Read Analog This block allows you to read the current state of an analog input pin. It has one parameter, a drop-down list containing all the valid Pins. It reports a value between 0 and 1023. Read Sonar This block allows you to connect an HC-SR04 type device. It has two parameters, both containing a drop-down list of valid PINs. The first parameter allows you to select a trigger pin, and the second an echo pin. It returns the measured distance in centimeters. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Arduino"},{"location":"ard_blocks/#the-arduino-uno-blocks","text":"The blocks consist of a set of command blocks that are rectangular in shape and reporter blocks rounded in shape.","title":"The Arduino Uno Blocks"},{"location":"ard_blocks/#command-blocks","text":"","title":"Command Blocks"},{"location":"ard_blocks/#write-digital","text":"This block allows you to select a pin and set its output to either a one or zero. It has two parameters. The first is a drop-down list of valid PINs. The second parameter is the output value. It also is a drop-down list and contains the values zero and one.","title":"Write Digital"},{"location":"ard_blocks/#write-pwm","text":"This block allows you to select a pin and set its PWM output to be a value between 0 and 100%. It has two parameters. The first is a drop-down list of valid PINs. The second parameter allows you to fill in a PWM value. If you use a PWM value of less than zero, it will be set to 0 internally. If you set the value to greater than 100, it will be set to 100.","title":"Write PWM"},{"location":"ard_blocks/#tone","text":"If you connect a Piezo type buzzer to a pin, this block will generate a tone on the pin for the frequency and duration specified. It contains three parameters. The first is a drop-down list of valid PINs. The second allows you to specify the frequency of the tone in Herz. The third parameter specifies the tone duration in milliseconds. If a value greater than 5000 is entered, the value will be set to 5000 internally, limiting the maximum playing time to 5 seconds.","title":"Tone"},{"location":"ard_blocks/#write-servo","text":"This block allows you to control the angle of a servo motor. It contains two parameters. The first is a drop-down list of valid PINs. The second specifies the angle in degrees. The value is limited to be between 0 and 180.","title":"Write Servo"},{"location":"ard_blocks/#reporter-blocks","text":"","title":"Reporter Blocks"},{"location":"ard_blocks/#read-digital","text":"This block allows you to read the current state of a digital input pin. It has one parameter, a drop-down list containing all the valid PINs. It reports a value of zero or one.","title":"Read Digital"},{"location":"ard_blocks/#read-analog","text":"This block allows you to read the current state of an analog input pin. It has one parameter, a drop-down list containing all the valid Pins. It reports a value between 0 and 1023.","title":"Read Analog"},{"location":"ard_blocks/#read-sonar","text":"This block allows you to connect an HC-SR04 type device. It has two parameters, both containing a drop-down list of valid PINs. The first parameter allows you to select a trigger pin, and the second an echo pin. It returns the measured distance in centimeters. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Read Sonar"},{"location":"arduino/","text":"FirmataExpress Installation Instructions When s3-extend is installed using pip, packages called pymata-express and pymata_rh are automatically installed to support Arduino boards and the RoboHAT MM1, respectively. These packages are used to control and monitor the two devices. Both pymata-express and pymata_rh require a specialized Firmata sketch, called FirmataExpress, to be installed on your Arduino or RoboHAT MM1. The following steps explain how to install FirmataExpress on your Arduino. Step 1: Arduino IDE Installation If you have not already installed the Arduino IDE on your computer, go to the Arduino download page and select a distribution for your operating system. Step 2: Install FirmataPlus Into The IDE After installation, open the Arduino IDE and select Tools/Manage Libraries. When the Libary Manager appears, enter FirmataExpress in the search box, and click install. Step 3: Install The Ultrasonic Library Into The IDE FirmataExpress also requires that the ultrasonic library by Erick Sim\u00f5es for operation. Once again, using the Arduino Library Manager and search for ultrasonic and find the version by Erick Simoes. Click on the Tools/Manage Libraries and select Ultrasonic and then click Install.** Step 4: Go Into The Tools Menus and Verify The Board Type and Port Step 5: Compile And Upload FirmataPlus Into The Arduino Select File/Examples and from the drop-down list, select FirmataExpress. Click on the upload button to compile and upload FirmataExpress to the Arduino. The Arduino is now ready for use. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Arduino And RoboHAT MM1"},{"location":"arduino/#firmataexpress-installation-instructions","text":"When s3-extend is installed using pip, packages called pymata-express and pymata_rh are automatically installed to support Arduino boards and the RoboHAT MM1, respectively. These packages are used to control and monitor the two devices. Both pymata-express and pymata_rh require a specialized Firmata sketch, called FirmataExpress, to be installed on your Arduino or RoboHAT MM1. The following steps explain how to install FirmataExpress on your Arduino.","title":"FirmataExpress Installation Instructions"},{"location":"arduino/#step-1-arduino-ide-installation","text":"If you have not already installed the Arduino IDE on your computer, go to the Arduino download page and select a distribution for your operating system.","title":"Step 1: Arduino IDE Installation"},{"location":"arduino/#step-2-install-firmataplus-into-the-ide","text":"After installation, open the Arduino IDE and select Tools/Manage Libraries. When the Libary Manager appears, enter FirmataExpress in the search box, and click install.","title":"Step 2: Install FirmataPlus Into The IDE"},{"location":"arduino/#step-3-install-the-ultrasonic-library-into-the-ide","text":"FirmataExpress also requires that the ultrasonic library by Erick Sim\u00f5es for operation. Once again, using the Arduino Library Manager and search for ultrasonic and find the version by Erick Simoes. Click on the Tools/Manage Libraries and select Ultrasonic and then click Install.**","title":"Step 3: Install The Ultrasonic Library Into The IDE"},{"location":"arduino/#step-4-go-into-the-tools-menus-and-verify-the-board-type-and-port","text":"","title":"Step 4: Go Into The Tools Menus and Verify The Board Type and Port"},{"location":"arduino/#step-5-compile-and-upload-firmataplus-into-the-arduino","text":"Select File/Examples and from the drop-down list, select FirmataExpress. Click on the upload button to compile and upload FirmataExpress to the Arduino.","title":"Step 5: Compile And Upload FirmataPlus Into The Arduino"},{"location":"arduino/#the-arduino-is-now-ready-for-use","text":"Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"The Arduino is now ready for use."},{"location":"browsers/","text":"Supported and Recommended Browsers The recommended browser for the Scratch3 OneGPIO extensions is Google Chrome . Firefox is also supported, but you may need to change a setting, as described in the next section. These are the only browsers supported at this time. SPECIAL NOTE FOR Raspberry Pi USERS: Chrome no longer supports insecure Websockets across the network. If you wish to use Chrome in the remote configuration, you must run the Scratch editor offline. If You Wish To Use Firefox You may use Firefox, but you will need to configure it to do so. The OneGPIO extensions use a WebSocket connection between the browser and the WebSocket Gateway that is part of each extension server. By default, Firefox does not allow connections to a WebSocket server. To enable Firefox to allow WebSocket connections, open the following URL about:config You should see a warning screen similar to that below. Click on the I accept the risk! button. Scroll down until you find the network.websocket.allowInsecureFromHTTPS entry and double click false to change its state to true. Close Firefox and reopen. Scratch 3 OneGPIO should now function properly. Trouble Shooting WebSocket Closed Warning If this warning pops up, make sure that you have successfully started the Python code, as described in the How To Use The OneGPIO Extensions section of this document and that it is still running. If the warning appears after successfully starting the Python extension, please visit the Troubleshooting section for the extension you are using, and follow the instructions there. Reporting Errors If, after loading an extension, it is not behaving as expected, with the browser open, press the F12 key on your keyboard to expose the browser console. If you see any errors reported and are still unsure how to solve the issue, create an issue against the s3-extend distribution pasting any error output into the issue comment. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"A Word About Browser Compatibility"},{"location":"browsers/#supported-and-recommended-browsers","text":"The recommended browser for the Scratch3 OneGPIO extensions is Google Chrome . Firefox is also supported, but you may need to change a setting, as described in the next section. These are the only browsers supported at this time. SPECIAL NOTE FOR Raspberry Pi USERS: Chrome no longer supports insecure Websockets across the network. If you wish to use Chrome in the remote configuration, you must run the Scratch editor offline.","title":"Supported and Recommended Browsers"},{"location":"browsers/#if-you-wish-to-use-firefox","text":"You may use Firefox, but you will need to configure it to do so. The OneGPIO extensions use a WebSocket connection between the browser and the WebSocket Gateway that is part of each extension server. By default, Firefox does not allow connections to a WebSocket server. To enable Firefox to allow WebSocket connections, open the following URL about:config You should see a warning screen similar to that below. Click on the I accept the risk! button. Scroll down until you find the network.websocket.allowInsecureFromHTTPS entry and double click false to change its state to true. Close Firefox and reopen. Scratch 3 OneGPIO should now function properly.","title":"If You Wish To Use Firefox"},{"location":"browsers/#trouble-shooting","text":"","title":"Trouble Shooting"},{"location":"browsers/#websocket-closed-warning","text":"If this warning pops up, make sure that you have successfully started the Python code, as described in the How To Use The OneGPIO Extensions section of this document and that it is still running. If the warning appears after successfully starting the Python extension, please visit the Troubleshooting section for the extension you are using, and follow the instructions there.","title":"WebSocket Closed Warning"},{"location":"browsers/#reporting-errors","text":"If, after loading an extension, it is not behaving as expected, with the browser open, press the F12 key on your keyboard to expose the browser console. If you see any errors reported and are still unsure how to solve the issue, create an issue against the s3-extend distribution pasting any error output into the issue comment. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Reporting Errors"},{"location":"cpx/","text":"The FirmataCPx Firmware To monitor and control the Circuit Playground Express, a special version of StandardFirmata, called FirmataCPx , must be installed on the Playground Express. Installation Since the Circuit Playground Express utilizes a UF2 bootloader, installation is quick and straightforward. To install FirmataCPx onto the Express, first, click on this link to download FirmataCPx.uf2. Next, place the Circuit Playground Express in bootloader mode by plugging the Express into a USB port on your computer and double-clicking the reset button on the Playground Express. All the neo-pixels should light green. Open up a file explorer tool, and you should see a USB drive called CPLAYBOOT. Using the file explorer, drag the FirmataCPx.uf2 file onto the CPLAYBOOT entry. In a few seconds, FirmataCPx should be loaded on the Playground Express. The red LED should flash several times and then extinguish after a successful load. For more information about loading UF2 files onto the Express, please refer to this Adafruit page. Even though this page addresses MakeCode, the procedure for flashing a .uf2 file is the same in all cases. Copyright (C) 2019-2021 Alan Yorinks. All Rights Reserved.","title":"Circuit Playground Express"},{"location":"cpx/#installation","text":"Since the Circuit Playground Express utilizes a UF2 bootloader, installation is quick and straightforward. To install FirmataCPx onto the Express, first, click on this link to download FirmataCPx.uf2. Next, place the Circuit Playground Express in bootloader mode by plugging the Express into a USB port on your computer and double-clicking the reset button on the Playground Express. All the neo-pixels should light green. Open up a file explorer tool, and you should see a USB drive called CPLAYBOOT. Using the file explorer, drag the FirmataCPx.uf2 file onto the CPLAYBOOT entry. In a few seconds, FirmataCPx should be loaded on the Playground Express. The red LED should flash several times and then extinguish after a successful load. For more information about loading UF2 files onto the Express, please refer to this Adafruit page. Even though this page addresses MakeCode, the procedure for flashing a .uf2 file is the same in all cases. Copyright (C) 2019-2021 Alan Yorinks. All Rights Reserved.","title":"Installation"},{"location":"cpx_blocks/","text":"The Circuit Playground Express Blocks The blocks consist of a set of HAT blocks with a bump at the left top, boolean blocks that have pointed ends, reporter blocks that are rounded in shape, and command blocks that are rectangular in shape. HAT Blocks HAT blocks test for a specific condition. When that condition is met for the first time, all of the blocks under the HAT block execute. When BUTTON Switch Is Pressed/Released This block allows you to be notified when either button switch A or B, and the button is either pressed or released. When SLIDE Switch Is Moved Left/Right This block executes when the slide switch moves to the selected position. When CPX Position Is TILT_POSITION This block executes when the Playground Express tilt position changes to Flat, Up, Down, Left, or Right. When A Loud Sound Is Detected This block executes when a relatively loud sound is detected. The sound only needs to be momentary, such as a hand clap. When A Touchpad Is Touched/Released This block executes when the selected touchpad is either touched or released. Boolean Blocks Boolean blocks test for a specific condition and return either True or False. BUTTON Switch Is Pressed/Released This block returns TRUE if the selected switch is currently in the selected state. Otherwise, it returns FALSE. Light/Temperature Sensor Value is > or < Specified Value This block compares the current value of the selected sensor, using the selected operator, to the value entered by the user. Tilt Position of The CPX This block returns TRUE if the CPX is currently in the selected tilt position. Selected Touchpad is Currently Touched/Released This block returns TRUE if the selected touchpad is currently in the selected state. Reporter Blocks Reporter blocks retrieve the current value for a selected sensor. Current Light/Temperature Value This block returns the current value for the selected sensor. The light value is non-calibrated, and the temperature is expressed in degrees Celsius. Command Blocks Command blocks control actuators on the CPX. Set Neopixel To Color This block sets the selected neopixel to the red, green, and blue values entered. To turn a neopixel off, set its r, g, and b values to zero. Play A Tone This block plays a tone at the specified frequency in Hertz for the duration specified in milliseconds. Board LED On/Off This block controls the state of the red board LED. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Circuit Playground Express"},{"location":"cpx_blocks/#the-circuit-playground-express-blocks","text":"The blocks consist of a set of HAT blocks with a bump at the left top, boolean blocks that have pointed ends, reporter blocks that are rounded in shape, and command blocks that are rectangular in shape.","title":"The Circuit Playground Express Blocks"},{"location":"cpx_blocks/#hat-blocks","text":"HAT blocks test for a specific condition. When that condition is met for the first time, all of the blocks under the HAT block execute.","title":"HAT Blocks"},{"location":"cpx_blocks/#when-button-switch-is-pressedreleased","text":"This block allows you to be notified when either button switch A or B, and the button is either pressed or released.","title":"When BUTTON Switch Is Pressed/Released"},{"location":"cpx_blocks/#when-slide-switch-is-moved-leftright","text":"This block executes when the slide switch moves to the selected position.","title":"When SLIDE Switch Is Moved Left/Right"},{"location":"cpx_blocks/#when-cpx-position-is-tilt_position","text":"This block executes when the Playground Express tilt position changes to Flat, Up, Down, Left, or Right.","title":"When CPX Position Is TILT_POSITION"},{"location":"cpx_blocks/#when-a-loud-sound-is-detected","text":"This block executes when a relatively loud sound is detected. The sound only needs to be momentary, such as a hand clap.","title":"When A Loud Sound Is Detected"},{"location":"cpx_blocks/#when-a-touchpad-is-touchedreleased","text":"This block executes when the selected touchpad is either touched or released.","title":"When A Touchpad Is Touched/Released"},{"location":"cpx_blocks/#boolean-blocks","text":"Boolean blocks test for a specific condition and return either True or False.","title":"Boolean Blocks"},{"location":"cpx_blocks/#button-switch-is-pressedreleased","text":"This block returns TRUE if the selected switch is currently in the selected state. Otherwise, it returns FALSE.","title":"BUTTON Switch Is Pressed/Released"},{"location":"cpx_blocks/#lighttemperature-sensor-value-is-or-specified-value","text":"This block compares the current value of the selected sensor, using the selected operator, to the value entered by the user.","title":"Light/Temperature Sensor Value is &gt; or &lt; Specified Value"},{"location":"cpx_blocks/#tilt-position-of-the-cpx","text":"This block returns TRUE if the CPX is currently in the selected tilt position.","title":"Tilt Position of The CPX"},{"location":"cpx_blocks/#selected-touchpad-is-currently-touchedreleased","text":"This block returns TRUE if the selected touchpad is currently in the selected state.","title":"Selected Touchpad is Currently Touched/Released"},{"location":"cpx_blocks/#reporter-blocks","text":"Reporter blocks retrieve the current value for a selected sensor.","title":"Reporter Blocks"},{"location":"cpx_blocks/#current-lighttemperature-value","text":"This block returns the current value for the selected sensor. The light value is non-calibrated, and the temperature is expressed in degrees Celsius.","title":"Current Light/Temperature Value"},{"location":"cpx_blocks/#command-blocks","text":"Command blocks control actuators on the CPX.","title":"Command Blocks"},{"location":"cpx_blocks/#set-neopixel-to-color","text":"This block sets the selected neopixel to the red, green, and blue values entered. To turn a neopixel off, set its r, g, and b values to zero.","title":"Set Neopixel To Color"},{"location":"cpx_blocks/#play-a-tone","text":"This block plays a tone at the specified frequency in Hertz for the duration specified in milliseconds.","title":"Play A Tone"},{"location":"cpx_blocks/#board-led-onoff","text":"This block controls the state of the red board LED. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Board LED On/Off"},{"location":"delay/","text":"Adding A Short Delay To Loops It is often advisable to add a short delay within a loop to allow other Scratch threads to run without blocking them. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"When In Doubt, Add A Small Delay"},{"location":"delay/#adding-a-short-delay-to-loops","text":"It is often advisable to add a short delay within a loop to allow other Scratch threads to run without blocking them. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Adding A Short Delay To Loops"},{"location":"esp-8266/","text":"ESP-8266 NodeMCU Installation Instructions 1. Install MicroPython On The ESP-8266 Full instructions for loading MicroPython can be found here here. In the Deploying The Firmware section of the document, notice that there two commands to install the firmware. The latter one contains a DIO option. This is the option I chose to gain access to the REPL prompt. 2. Verify The REPL Prompt Follow these instructions to make sure that the installation was a success. 3. Setup WiFi Networking Follow the procedure as described here. Once you have configured the device for WiFi, it will automatically connect to your router. 4. Installing The ampy Tool We need to install some files on to the ESP-8266 to communicate with the Scratch extension. We will be using the ampy tool for file manipulation on the ESP-8266. To install ampy, follow the instructions at this link. There is a warning about not using the examples provided with the ampy tutorial. You can safely ignore the warning notice since we only need to install the tool. 5. Getting The MicroPython Files To Install On To The ESP-8266 The files we need to install are main.py and esp_8266_min.py. The esp_8266_min.py file is a file with all unnecessary white space removed. Here is a fully white-spaced enabled version of the source code. The file needed to be \"minified\" so that it would fit on the ESP-8266 NodeMCU. To get the files, go to the s3-extend web page, and click on the green Clone or download button in the upper right of the page. A .zip file is downloaded to your computer. Unzip the file, and a directory called s3-extend-master is created and populated with the files we need. Here is the directory tree for s3-extend-master: s3-extend-master \u251c\u2500\u2500 esp_8266_micropython \u2502 \u251c\u2500\u2500 esp_8266_max.py \u2502 \u251c\u2500\u2500 esp_8266_min.py \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 main.py \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 pypi_desc.md \u251c\u2500\u2500 README.md \u251c\u2500\u2500 s3_extend \u2502 \u251c\u2500\u2500 gateways \u2502 \u2502 \u251c\u2500\u2500 arduino_gateway.py \u2502 \u2502 \u251c\u2500\u2500 esp8266_gateway.py \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u251c\u2500\u2500 rpi_gateway.py \u2502 \u2502 \u251c\u2500\u2500 servo.py \u2502 \u2502 \u251c\u2500\u2500 sonar.py \u2502 \u2502 \u251c\u2500\u2500 stepper.py \u2502 \u2502 \u2514\u2500\u2500 ws_gateway.py \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 s3a.py \u2502 \u251c\u2500\u2500 s3e.py \u2502 \u2514\u2500\u2500 s3r.py \u2514\u2500\u2500 setup.py Both files are located in the esp_8266_micropython directory. 6. Using ampy To Install The Files Open a terminal window, and go into the esp_8266_micropython directory. To upload main.py to the ESP-8266, type in the following command: ampy --port /dev/ttyUSB0 put main.py NOTE: You may need to change the port to match your system. Instead of /dev/ttyUSB0, you may need to use something like COM5. Use the same com port you used when testing the REPL. Now upload esp_8266_min.py: ampy --port /dev/ttyUSB0 put esp_8266_min.py 7. Powering Up When you power up the board, you should see the red LED on the ESP-8266 NodeMCU flash a few times and then stay on. The LED will be extinguished when the Scratch 3 extension successfully connects to the board. See the Ready, Set, Go section of this document. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"ESP-8266"},{"location":"esp-8266/#esp-8266-nodemcu-installation-instructions","text":"","title":"ESP-8266 NodeMCU Installation Instructions"},{"location":"esp-8266/#1-install-micropython-on-the-esp-8266","text":"Full instructions for loading MicroPython can be found here here. In the Deploying The Firmware section of the document, notice that there two commands to install the firmware. The latter one contains a DIO option. This is the option I chose to gain access to the REPL prompt.","title":"1. Install MicroPython On The ESP-8266"},{"location":"esp-8266/#2-verify-the-repl-prompt","text":"Follow these instructions to make sure that the installation was a success.","title":"2. Verify The REPL Prompt"},{"location":"esp-8266/#3-setup-wifi-networking","text":"Follow the procedure as described here. Once you have configured the device for WiFi, it will automatically connect to your router.","title":"3. Setup WiFi Networking"},{"location":"esp-8266/#4-installing-the-ampy-tool","text":"We need to install some files on to the ESP-8266 to communicate with the Scratch extension. We will be using the ampy tool for file manipulation on the ESP-8266. To install ampy, follow the instructions at this link. There is a warning about not using the examples provided with the ampy tutorial. You can safely ignore the warning notice since we only need to install the tool.","title":"4. Installing The ampy Tool"},{"location":"esp-8266/#5-getting-the-micropython-files-to-install-on-to-the-esp-8266","text":"The files we need to install are main.py and esp_8266_min.py. The esp_8266_min.py file is a file with all unnecessary white space removed. Here is a fully white-spaced enabled version of the source code. The file needed to be \"minified\" so that it would fit on the ESP-8266 NodeMCU. To get the files, go to the s3-extend web page, and click on the green Clone or download button in the upper right of the page. A .zip file is downloaded to your computer. Unzip the file, and a directory called s3-extend-master is created and populated with the files we need. Here is the directory tree for s3-extend-master: s3-extend-master \u251c\u2500\u2500 esp_8266_micropython \u2502 \u251c\u2500\u2500 esp_8266_max.py \u2502 \u251c\u2500\u2500 esp_8266_min.py \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 main.py \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 pypi_desc.md \u251c\u2500\u2500 README.md \u251c\u2500\u2500 s3_extend \u2502 \u251c\u2500\u2500 gateways \u2502 \u2502 \u251c\u2500\u2500 arduino_gateway.py \u2502 \u2502 \u251c\u2500\u2500 esp8266_gateway.py \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u251c\u2500\u2500 rpi_gateway.py \u2502 \u2502 \u251c\u2500\u2500 servo.py \u2502 \u2502 \u251c\u2500\u2500 sonar.py \u2502 \u2502 \u251c\u2500\u2500 stepper.py \u2502 \u2502 \u2514\u2500\u2500 ws_gateway.py \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 s3a.py \u2502 \u251c\u2500\u2500 s3e.py \u2502 \u2514\u2500\u2500 s3r.py \u2514\u2500\u2500 setup.py Both files are located in the esp_8266_micropython directory.","title":"5. Getting The MicroPython Files To Install On To The ESP-8266"},{"location":"esp-8266/#6-using-ampy-to-install-the-files","text":"Open a terminal window, and go into the esp_8266_micropython directory. To upload main.py to the ESP-8266, type in the following command: ampy --port /dev/ttyUSB0 put main.py NOTE: You may need to change the port to match your system. Instead of /dev/ttyUSB0, you may need to use something like COM5. Use the same com port you used when testing the REPL. Now upload esp_8266_min.py: ampy --port /dev/ttyUSB0 put esp_8266_min.py","title":"6. Using ampy To Install The Files"},{"location":"esp-8266/#7-powering-up","text":"When you power up the board, you should see the red LED on the ESP-8266 NodeMCU flash a few times and then stay on. The LED will be extinguished when the Scratch 3 extension successfully connects to the board. See the Ready, Set, Go section of this document. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"7. Powering Up"},{"location":"esp_blocks/","text":"The ESP-8266 Blocks The blocks consist of a set of command blocks that are rectangular in shape and reporter blocks rounded in shape. NOTE: If you select the ESP-8266 OneGPIO, a Warning Dialog will pop up, reminding you to enter and use the ESP-8266 IP address block. Command Blocks ESP-8266 IP Address You must enter the WiFi IP address of the ESP-8266 into this block. This block must precede any of the other ESP-8266 blocks and should only be used once. When Scratch executes this block, the red LED on the ESP-8266 should turn off, indicating a successful connection. Write Digital This block allows you to select a pin and set its output to either a one or zero. It has two parameters. The first is a drop-down list of valid PINs. The second parameter is the output value. It also is a drop-down list and contains the values zero and one. Write PWM This block allows you to select a pin and set its PWM output to be a value between 0 and 100%. It has two parameters. The first is a drop-down list of valid PINs. The second parameter allows you to fill in a PWM value. If you use a PWM value of less than zero, it will be set to 0 internally. If you set the value to greater than 100, it will be set to 100. Tone If you connect a Piezo type buzzer to a pin, this block will generate a tone on the pin for the frequency and duration specified. It contains three parameters. The first is a drop-down list of valid PINs. The second allows you to specify the frequency of the tone in Herz. The third parameter specifies the tone duration in milliseconds. If a value greater than 5000 is entered, the value will be set to 5000 internally, limiting the maximum playing time to 5 seconds. Write Servo This block allows you to control the angle of a servo motor. It contains two parameters. The first is a drop-down list of valid PINs. The second specifies the angle in degrees. The value is limited to be between 0 and 180. Reporter Blocks Read Digital This block allows you to read the current state of a digital input pin. It has one parameter, a drop-down list containing all the valid PINs. It reports a value of zero or one. Read Analog This block allows you to read the current state of an analog input pin. It has one parameter, a drop-down list containing all the valid Pins. It reports a value between 0 and 100. Read Sonar This block allows you to connect an HC-SR04 type device. It has two parameters, both containing a drop-down list of valid PINs. The first parameter allows you to select a trigger pin, and the second an echo pin. It returns the measured distance in centimeters. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"ESP-8266"},{"location":"esp_blocks/#the-esp-8266-blocks","text":"The blocks consist of a set of command blocks that are rectangular in shape and reporter blocks rounded in shape. NOTE: If you select the ESP-8266 OneGPIO, a Warning Dialog will pop up, reminding you to enter and use the ESP-8266 IP address block.","title":"The ESP-8266 Blocks"},{"location":"esp_blocks/#command-blocks","text":"","title":"Command Blocks"},{"location":"esp_blocks/#esp-8266-ip-address","text":"You must enter the WiFi IP address of the ESP-8266 into this block. This block must precede any of the other ESP-8266 blocks and should only be used once. When Scratch executes this block, the red LED on the ESP-8266 should turn off, indicating a successful connection.","title":"ESP-8266 IP Address"},{"location":"esp_blocks/#write-digital","text":"This block allows you to select a pin and set its output to either a one or zero. It has two parameters. The first is a drop-down list of valid PINs. The second parameter is the output value. It also is a drop-down list and contains the values zero and one.","title":"Write Digital"},{"location":"esp_blocks/#write-pwm","text":"This block allows you to select a pin and set its PWM output to be a value between 0 and 100%. It has two parameters. The first is a drop-down list of valid PINs. The second parameter allows you to fill in a PWM value. If you use a PWM value of less than zero, it will be set to 0 internally. If you set the value to greater than 100, it will be set to 100.","title":"Write PWM"},{"location":"esp_blocks/#tone","text":"If you connect a Piezo type buzzer to a pin, this block will generate a tone on the pin for the frequency and duration specified. It contains three parameters. The first is a drop-down list of valid PINs. The second allows you to specify the frequency of the tone in Herz. The third parameter specifies the tone duration in milliseconds. If a value greater than 5000 is entered, the value will be set to 5000 internally, limiting the maximum playing time to 5 seconds.","title":"Tone"},{"location":"esp_blocks/#write-servo","text":"This block allows you to control the angle of a servo motor. It contains two parameters. The first is a drop-down list of valid PINs. The second specifies the angle in degrees. The value is limited to be between 0 and 180.","title":"Write Servo"},{"location":"esp_blocks/#reporter-blocks","text":"","title":"Reporter Blocks"},{"location":"esp_blocks/#read-digital","text":"This block allows you to read the current state of a digital input pin. It has one parameter, a drop-down list containing all the valid PINs. It reports a value of zero or one.","title":"Read Digital"},{"location":"esp_blocks/#read-analog","text":"This block allows you to read the current state of an analog input pin. It has one parameter, a drop-down list containing all the valid Pins. It reports a value between 0 and 100.","title":"Read Analog"},{"location":"esp_blocks/#read-sonar","text":"This block allows you to connect an HC-SR04 type device. It has two parameters, both containing a drop-down list of valid PINs. The first parameter allows you to select a trigger pin, and the second an echo pin. It returns the measured distance in centimeters. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Read Sonar"},{"location":"ext_ard/","text":"Starting The OneGPIO Server For Arduino With power applied to your Arduino, press and release the Arduino's reset button. Next, open a terminal window and type: s3a This command automatically starts the Python Banyan Backplane and both the Banyan WebSocket and Banyan Arduino Gateways. It starts an automatic 5-second countdown timer to allow the Arduino adequate time to reset itself and start the Firmata-Express sketch. To learn more about the Backplane and Gateways, visit \"A Peek Under The Hood\" for more information. After the countdown time completes, the terminal window indicates that the Arduino is initialized. You may now start Scratch 3 in your Web browser, as explained in the \"Launching Scratch 3\" section of this document. Manually Specifying The COM Port The Arduino Gateway will automatically discover the COM port that the Arduino Gateway is using. If you wish to manually specify the COM port, use the -c command-line option when starting s3a. For example, if you are using Windows and the COM port you wish to use is COM6 then, start s3a with the following command: s3a -c COM6 For Linux or macOS, use the COM port designator specific to your operating system. For example, if the COM port is /dev/ttyACM0, then start s3a with the following command: s3a -c /dev/ttyACM0 Manually Specifying An Arduino Instance If you have multiple Arduino's plugged into your computer, you can explicitly tell s3a which one to use by taking advantage of the pymata-express Arduino Instance Id Feature, You may do so using the -i command-line option: s3a -i 2 Troubleshooting Only use a high-quality USB cable. Verify that you properly connected the cable to both your computer and the Arduino. If s3a detects an error in either the backplane or the two gateways, it will shut itself down. To troubleshoot why this may be happening, open a new terminal window and type: backplane You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown. Next, open an additional terminal window and type: ardgw You should see a window similar to the one shown above. If you do not, make sure that you've flashed the Arduino with the FirmataExpress sketch, as explained in the \"Preparing Your Micro-Controller\" section of this document. Also, make sure that you've plugged the Arduino into a USB port before starting s3a. Next, open a third terminal window and type: wsgw You should see a window similar to the one shown above. If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Arduino"},{"location":"ext_ard/#starting-the-onegpio-server-for-arduino","text":"With power applied to your Arduino, press and release the Arduino's reset button. Next, open a terminal window and type: s3a This command automatically starts the Python Banyan Backplane and both the Banyan WebSocket and Banyan Arduino Gateways. It starts an automatic 5-second countdown timer to allow the Arduino adequate time to reset itself and start the Firmata-Express sketch. To learn more about the Backplane and Gateways, visit \"A Peek Under The Hood\" for more information. After the countdown time completes, the terminal window indicates that the Arduino is initialized. You may now start Scratch 3 in your Web browser, as explained in the \"Launching Scratch 3\" section of this document.","title":"Starting The OneGPIO Server For Arduino"},{"location":"ext_ard/#manually-specifying-the-com-port","text":"The Arduino Gateway will automatically discover the COM port that the Arduino Gateway is using. If you wish to manually specify the COM port, use the -c command-line option when starting s3a. For example, if you are using Windows and the COM port you wish to use is COM6 then, start s3a with the following command: s3a -c COM6 For Linux or macOS, use the COM port designator specific to your operating system. For example, if the COM port is /dev/ttyACM0, then start s3a with the following command: s3a -c /dev/ttyACM0","title":"Manually Specifying The COM Port"},{"location":"ext_ard/#manually-specifying-an-arduino-instance","text":"If you have multiple Arduino's plugged into your computer, you can explicitly tell s3a which one to use by taking advantage of the pymata-express Arduino Instance Id Feature, You may do so using the -i command-line option: s3a -i 2","title":"Manually Specifying An Arduino Instance"},{"location":"ext_ard/#troubleshooting","text":"Only use a high-quality USB cable. Verify that you properly connected the cable to both your computer and the Arduino. If s3a detects an error in either the backplane or the two gateways, it will shut itself down. To troubleshoot why this may be happening, open a new terminal window and type: backplane You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown. Next, open an additional terminal window and type: ardgw You should see a window similar to the one shown above. If you do not, make sure that you've flashed the Arduino with the FirmataExpress sketch, as explained in the \"Preparing Your Micro-Controller\" section of this document. Also, make sure that you've plugged the Arduino into a USB port before starting s3a. Next, open a third terminal window and type: wsgw You should see a window similar to the one shown above. If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Troubleshooting"},{"location":"ext_cpx/","text":"Starting The OneGPIO Server For The Circuit Playground Express Plug the Circuit Playground Express into a USB connector on your computer Next, open a terminal window and type: s3c This command automatically starts the Python Banyan Backplane and both the Banyan WebSocket and Banyan Circuit Playground Express Gateways. If you remove the USB cable after starting s3c, or if you have forgotten to plug in the cable before starting s3c, you will see something similar to the following: Here, s3c tried to start the Circuit Playground Express Gateway but detected an error and aborted it. Visit \"A Peek Under The Hood\" for more information about the Backplane and Gateways. Troubleshooting Only use a high-quality USB cable. Verify that you properly connected the cable to both your computer and the Circuit Playground express. If s3c detects an error in either the backplane or either of the two gateways, it will shut itself down. To troubleshoot why this may be happening, open a new terminal window and type: backplane You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown. Next, open an additional terminal window and type: cpxgw You should see a window similar to the one shown above. Here, the screenshot displays the version of pymata-cpx and the release date of FirmataCPx. Next, open a third terminal window and type: wsgw -i 9003 You should see a window similar to the one shown above. If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Circuit Playground Express"},{"location":"ext_cpx/#starting-the-onegpio-server-for-the-circuit-playground-express","text":"Plug the Circuit Playground Express into a USB connector on your computer Next, open a terminal window and type: s3c This command automatically starts the Python Banyan Backplane and both the Banyan WebSocket and Banyan Circuit Playground Express Gateways. If you remove the USB cable after starting s3c, or if you have forgotten to plug in the cable before starting s3c, you will see something similar to the following: Here, s3c tried to start the Circuit Playground Express Gateway but detected an error and aborted it. Visit \"A Peek Under The Hood\" for more information about the Backplane and Gateways.","title":"Starting The OneGPIO Server For The Circuit Playground Express"},{"location":"ext_cpx/#troubleshooting","text":"Only use a high-quality USB cable. Verify that you properly connected the cable to both your computer and the Circuit Playground express. If s3c detects an error in either the backplane or either of the two gateways, it will shut itself down. To troubleshoot why this may be happening, open a new terminal window and type: backplane You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown. Next, open an additional terminal window and type: cpxgw You should see a window similar to the one shown above. Here, the screenshot displays the version of pymata-cpx and the release date of FirmataCPx. Next, open a third terminal window and type: wsgw -i 9003 You should see a window similar to the one shown above. If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Troubleshooting"},{"location":"ext_esp/","text":"Starting The OneGPIO Server For The ESP-8266 Apply power to the ESP-8266. The red LED should blink a few times and then stay continually on. Next, open a terminal window and type: s3e This command automatically starts the Python Banyan Backplane and both the Banyan WebSocket and Banyan ESP-8266 Gateways. You may now start Scratch 3 in your Web browser, as explained in the \"Launching Scratch 3\" section of this document. Troubleshooting If the command window does not look similar to the one above, open a new terminal and type: backplane You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown. Next, open an additional terminal window and type: espgw -w True You should see a window similar to the one shown above for the ESP-8266 Gateway when the s3e command succeeds. If you do not, make sure that you've installed MicroPython on the ESP-8266 and flashed it with main.py and esp8266_min.py as explained in the \"Preparing Your Micro-Controller\" section of this document. Next, open a third terminal window and type: wsgw -i 9002 You should see a window similar to the one shown above for the WebSocket Gateway when the s3e command succeeds. If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"ESP-8266"},{"location":"ext_esp/#starting-the-onegpio-server-for-the-esp-8266","text":"Apply power to the ESP-8266. The red LED should blink a few times and then stay continually on. Next, open a terminal window and type: s3e This command automatically starts the Python Banyan Backplane and both the Banyan WebSocket and Banyan ESP-8266 Gateways. You may now start Scratch 3 in your Web browser, as explained in the \"Launching Scratch 3\" section of this document.","title":"Starting The OneGPIO Server For The ESP-8266"},{"location":"ext_esp/#troubleshooting","text":"If the command window does not look similar to the one above, open a new terminal and type: backplane You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown. Next, open an additional terminal window and type: espgw -w True You should see a window similar to the one shown above for the ESP-8266 Gateway when the s3e command succeeds. If you do not, make sure that you've installed MicroPython on the ESP-8266 and flashed it with main.py and esp8266_min.py as explained in the \"Preparing Your Micro-Controller\" section of this document. Next, open a third terminal window and type: wsgw -i 9002 You should see a window similar to the one shown above for the WebSocket Gateway when the s3e command succeeds. If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Troubleshooting"},{"location":"ext_pico/","text":"Starting The OneGPIO Server For The Picoboard Plug the Picoboard into a USB connector on your computer Next, open a terminal window and type: s3p This command automatically starts the Python Banyan Backplane and both the Banyan WebSocket and Banyan Picoboard Gateways. If you remove the USB cable after starting s3p, or if you have forgotten to plug in the cable before starting s3p, you will see something similar to the following: Here, s3p detected that the Picoboard Gateway was not running, and therefore shut down all its processes. Visit \"A Peek Under The Hood\" for more information about the Backplane and Gateways. Troubleshooting Only use a high-quality USB cable. Verify that you properly connected the cable to both your computer and the Picoboard. If s3p detects an error in either the backplane or either of the two gateways, it will shut itself down. To troubleshoot why this may be happening, open a new terminal window and type: backplane You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown. Next, open an additional terminal window and type: pbgw You should see a window similar to the one shown above. Here, the screenshot indicates that there are two active COM ports. The Picoboard Gateway checks all of the active COM ports until it finds a connected Picoboard. Next, open a third terminal window and type: wsgw -i 9004 You should see a window similar to the one shown above. If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Picoboard"},{"location":"ext_pico/#starting-the-onegpio-server-for-the-picoboard","text":"Plug the Picoboard into a USB connector on your computer Next, open a terminal window and type: s3p This command automatically starts the Python Banyan Backplane and both the Banyan WebSocket and Banyan Picoboard Gateways. If you remove the USB cable after starting s3p, or if you have forgotten to plug in the cable before starting s3p, you will see something similar to the following: Here, s3p detected that the Picoboard Gateway was not running, and therefore shut down all its processes. Visit \"A Peek Under The Hood\" for more information about the Backplane and Gateways.","title":"Starting The OneGPIO Server For The Picoboard"},{"location":"ext_pico/#troubleshooting","text":"Only use a high-quality USB cable. Verify that you properly connected the cable to both your computer and the Picoboard. If s3p detects an error in either the backplane or either of the two gateways, it will shut itself down. To troubleshoot why this may be happening, open a new terminal window and type: backplane You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown. Next, open an additional terminal window and type: pbgw You should see a window similar to the one shown above. Here, the screenshot indicates that there are two active COM ports. The Picoboard Gateway checks all of the active COM ports until it finds a connected Picoboard. Next, open a third terminal window and type: wsgw -i 9004 You should see a window similar to the one shown above. If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Troubleshooting"},{"location":"ext_rh/","text":"Starting The OneGPIO Server For RoboHAT MM1 Power the RoboHAT and then press and release the RoboHAT's reset button. Next, open a terminal window and type: s3rh This command automatically starts the Python Banyan Backplane and both the Banyan WebSocket and Banyan RoboHAT Gateways. It starts an automatic 5-second countdown timer to allow the RoboHAT adequate time to reset itself and start the Firmata-Express sketch. To learn more about the Backplane and Gateways, visit \"A Peek Under The Hood\" for more information. After the countdown time completes, the terminal window indicates that the RoboHAT is initialized. You may now start Scratch 3 in your Web browser, as explained in the \"Launching Scratch 3\" section of this document. Manually Specifying The COM Port The RoboHAT Gateway will automatically discover the COM port that the RoboHAT Gateway is using. If you wish to manually specify the COM port, use the -c command-line option when starting s3rh. For example, if you are using Windows and the COM port you wish to use is COM6, start s3rh with the following command: s3rh -c COM6 For Linux or macOS, use the COM port designator specific to your operating system. For example, if the COM port is /dev/ttyACM0, start s3rh with the following command: s3rh -c /dev/ttyACM0 Manually Specifying An RoboHAT Instance If you are using one or more Arduino's while using the RoboHAT, you can explicitly tell s3rh which one to use by taking advantage of the FirmataExpress Arduino Instance Id Feature, You may do so using the -i command-line option: s3rh -i 2 Troubleshooting Only use a high-quality USB cable. Verify that you correctly connected the cable to both your computer and the RoboHAT. If s3rh detects an error in either the backplane or the two gateways, it will shut itself down. To troubleshoot why this may be happening, open a new terminal window and type: backplane You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown. Next, open an additional terminal window and type: rhgw You should see a window similar to the one shown above. If you do not, make sure that you've flashed the RoboHAT with the FirmataExpress sketch, as explained in the \"Preparing Your Micro-Controller\" section of this document. Also, make sure that you've plugged the RoboHAT into a USB port before starting s3rh. Next, open a third terminal window and type: wsgw -i 9005 You should see a window similar to the one shown above. If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"RoboHAT MMI"},{"location":"ext_rh/#starting-the-onegpio-server-for-robohat-mm1","text":"Power the RoboHAT and then press and release the RoboHAT's reset button. Next, open a terminal window and type: s3rh This command automatically starts the Python Banyan Backplane and both the Banyan WebSocket and Banyan RoboHAT Gateways. It starts an automatic 5-second countdown timer to allow the RoboHAT adequate time to reset itself and start the Firmata-Express sketch. To learn more about the Backplane and Gateways, visit \"A Peek Under The Hood\" for more information. After the countdown time completes, the terminal window indicates that the RoboHAT is initialized. You may now start Scratch 3 in your Web browser, as explained in the \"Launching Scratch 3\" section of this document.","title":"Starting The OneGPIO Server For RoboHAT MM1"},{"location":"ext_rh/#manually-specifying-the-com-port","text":"The RoboHAT Gateway will automatically discover the COM port that the RoboHAT Gateway is using. If you wish to manually specify the COM port, use the -c command-line option when starting s3rh. For example, if you are using Windows and the COM port you wish to use is COM6, start s3rh with the following command: s3rh -c COM6 For Linux or macOS, use the COM port designator specific to your operating system. For example, if the COM port is /dev/ttyACM0, start s3rh with the following command: s3rh -c /dev/ttyACM0","title":"Manually Specifying The COM Port"},{"location":"ext_rh/#manually-specifying-an-robohat-instance","text":"If you are using one or more Arduino's while using the RoboHAT, you can explicitly tell s3rh which one to use by taking advantage of the FirmataExpress Arduino Instance Id Feature, You may do so using the -i command-line option: s3rh -i 2","title":"Manually Specifying An RoboHAT Instance"},{"location":"ext_rh/#troubleshooting","text":"Only use a high-quality USB cable. Verify that you correctly connected the cable to both your computer and the RoboHAT. If s3rh detects an error in either the backplane or the two gateways, it will shut itself down. To troubleshoot why this may be happening, open a new terminal window and type: backplane You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown. Next, open an additional terminal window and type: rhgw You should see a window similar to the one shown above. If you do not, make sure that you've flashed the RoboHAT with the FirmataExpress sketch, as explained in the \"Preparing Your Micro-Controller\" section of this document. Also, make sure that you've plugged the RoboHAT into a USB port before starting s3rh. Next, open a third terminal window and type: wsgw -i 9005 You should see a window similar to the one shown above. If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Troubleshooting"},{"location":"ext_rpi/","text":"Starting The OneGPIO Server For Raspberry Pi Apply power to the Raspberry Pi. Next, after logging in, open a terminal window and type: s3r This command automatically starts the Python Banyan Backplane and both the Banyan WebSocket and Banyan Raspberry Pi Gateways. IMPORTANT NOTE: The s3r command is intended to run exclusively on a Raspberry Pi. Visit \"A Peek Under The Hood\" for more information about the Backplane and Gateways. You may now start Scratch 3 in your Web browser, as explained in the \"Launching Scratch 3\" section of this document. Troubleshooting If the command window does not look similar to the one above, open a new terminal and type: backplane You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown. Next, open an additional terminal window and type: rpigw You should see a window similar to the one shown above for the ESP-8266 Gateway when the s3e command succeeds. If you do not, make sure that you've installed MicroPython on the ESP-8266 and flashed it with main.py and esp8266_min.py as explained in the \"Preparing Your Micro-Controller\" section of this document. Next, open a third terminal window and type: wsgw -i 9001 You should see a window similar to the one shown above for the WebSocket Gateway when the s3e command succeeds. If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Raspberry Pi"},{"location":"ext_rpi/#starting-the-onegpio-server-for-raspberry-pi","text":"Apply power to the Raspberry Pi. Next, after logging in, open a terminal window and type: s3r This command automatically starts the Python Banyan Backplane and both the Banyan WebSocket and Banyan Raspberry Pi Gateways. IMPORTANT NOTE: The s3r command is intended to run exclusively on a Raspberry Pi. Visit \"A Peek Under The Hood\" for more information about the Backplane and Gateways. You may now start Scratch 3 in your Web browser, as explained in the \"Launching Scratch 3\" section of this document.","title":"Starting The OneGPIO Server For Raspberry Pi"},{"location":"ext_rpi/#troubleshooting","text":"If the command window does not look similar to the one above, open a new terminal and type: backplane You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown. Next, open an additional terminal window and type: rpigw You should see a window similar to the one shown above for the ESP-8266 Gateway when the s3e command succeeds. If you do not, make sure that you've installed MicroPython on the ESP-8266 and flashed it with main.py and esp8266_min.py as explained in the \"Preparing Your Micro-Controller\" section of this document. Next, open a third terminal window and type: wsgw -i 9001 You should see a window similar to the one shown above for the WebSocket Gateway when the s3e command succeeds. If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Troubleshooting"},{"location":"ext_rpi_pico/","text":"Starting The OneGPIO Server For The Raspberry Pi Pico Make sure that you have the server application installed on your Pico. Plug your USB cable to power up the board. You should see the green LED flash twice. If not, check your cable and the connection. Next, open a terminal window and type: s3rp This command automatically starts the Python Banyan Backplane and the Banyan WebSocket, and Banyan Raspberry Pi Pico Gateways. If you remove the USB cable after starting s3rp , or if you have forgotten to plug in the cable before starting s3rp , you will see something similar to the following: Here, s3rp tried to start the Raspberry Pi Pico Gateway but detected an error and aborted. Visit \"A Peek Under The Hood\" for more information about the Backplane and Gateways. Troubleshooting Only use a high-quality USB cable. Verify that you properly connected the cable to both your computer and the Raspberry Pi Pico. If s3rp detects an error in either the backplane or either of the two gateways, it will shut itself down. To troubleshoot why this may be happening, open a new terminal window and type: backplane You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown. Next, open an additional terminal window and type: rpgw You should see a window similar to the one shown above. Here, the screenshot displays the version of tmx-pico-aio library, shown as TelemetrixRpiPicoAio, the serial port selected, the Pico's unique ID, the version number of the server firmware, shown as Telemetrix4RPiPico, and the standard Python Banyan header. Next, open a third terminal window and type: wsgw -i 9006 You should see a window similar to the one shown above. If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Raspberry Pi Pico"},{"location":"ext_rpi_pico/#starting-the-onegpio-server-for-the-raspberry-pi-pico","text":"Make sure that you have the server application installed on your Pico. Plug your USB cable to power up the board. You should see the green LED flash twice. If not, check your cable and the connection. Next, open a terminal window and type: s3rp This command automatically starts the Python Banyan Backplane and the Banyan WebSocket, and Banyan Raspberry Pi Pico Gateways. If you remove the USB cable after starting s3rp , or if you have forgotten to plug in the cable before starting s3rp , you will see something similar to the following: Here, s3rp tried to start the Raspberry Pi Pico Gateway but detected an error and aborted. Visit \"A Peek Under The Hood\" for more information about the Backplane and Gateways.","title":"Starting The OneGPIO Server For The Raspberry Pi Pico"},{"location":"ext_rpi_pico/#troubleshooting","text":"Only use a high-quality USB cable. Verify that you properly connected the cable to both your computer and the Raspberry Pi Pico. If s3rp detects an error in either the backplane or either of the two gateways, it will shut itself down. To troubleshoot why this may be happening, open a new terminal window and type: backplane You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown. Next, open an additional terminal window and type: rpgw You should see a window similar to the one shown above. Here, the screenshot displays the version of tmx-pico-aio library, shown as TelemetrixRpiPicoAio, the serial port selected, the Pico's unique ID, the version number of the server firmware, shown as Telemetrix4RPiPico, and the standard Python Banyan header. Next, open a third terminal window and type: wsgw -i 9006 You should see a window similar to the one shown above. If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Troubleshooting"},{"location":"issues/","text":"Issues With The Scratch 3 OneGPIO Editor If you are having problems with the editor in the browser, you may file an issue here. Include a description of what you were doing that caused the error and output from the browser console. Press F12 while in the browser to get to the console. Please also include a .sb3 file for your Scratch project or a screenshot of the blocks in the Scatch script. Issues With Any Of The OneGPIO Extension Servers If you are having problems with any of the extension servers, you may file an issue here. Include a description of what you were doing that caused the error and output from the browser console. Press F12 while in the browser to get to the console. Please also include a .sb3 file for your Scratch project or a screenshot of the blocks in the Scatch script. Issues With This Document If you find anything that needs to be corrected or wish to request that additional information be added to it, please file an issue here. Contacting Me Via Email Please feel free to email me at: MisterYsLab@gmail.com Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Reporting Issues"},{"location":"issues/#issues-with-the-scratch-3-onegpio-editor","text":"If you are having problems with the editor in the browser, you may file an issue here. Include a description of what you were doing that caused the error and output from the browser console. Press F12 while in the browser to get to the console. Please also include a .sb3 file for your Scratch project or a screenshot of the blocks in the Scatch script.","title":"Issues With The Scratch 3 OneGPIO Editor"},{"location":"issues/#issues-with-any-of-the-onegpio-extension-servers","text":"If you are having problems with any of the extension servers, you may file an issue here. Include a description of what you were doing that caused the error and output from the browser console. Press F12 while in the browser to get to the console. Please also include a .sb3 file for your Scratch project or a screenshot of the blocks in the Scatch script.","title":"Issues With Any Of The OneGPIO Extension Servers"},{"location":"issues/#issues-with-this-document","text":"If you find anything that needs to be corrected or wish to request that additional information be added to it, please file an issue here.","title":"Issues With This Document"},{"location":"issues/#contacting-me-via-email","text":"Please feel free to email me at: MisterYsLab@gmail.com Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Contacting Me Via Email"},{"location":"multi/","text":"Controlling Or Monitoring One Board With Another As the screenshot above shows, it is possible to run multiple OneGPIO extensions at the same time and have the boards interact with each other. This Scratch script will control the LEDs connected to an ESP-8266 and Raspberry Pi by monitoring the state of a switch on an Arduino. This script was run in a browser on a PC in offline mode, allowing the Raspberry Pi to be controlled remotely. NOTE: You may run a single micro-controller or all simultaneously on a single computer, but only a single instance of a microcontroller may be run at a time. For example, you may run a Raspberry Pi and an Arduino simultaneously and use one to control the other. However, you may not run two of the same type of controller at the same. Running two boards that use a serial link is an advanced and experimental feature and not recommended nor officially supported. An example would be running an Arduino and a Picoboard on the same computer at the same time. If you wish to run two boards that use a serial link, you may have to specify the COM port for one of the boards manually. This is done by using the -c option in the launcher. For example, to start the Picoboard extension forcing it to use COM7, you would start the launcher with: s3p -c com7 Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Running Multiple OneGPIO Extensions Simultaneously"},{"location":"multi/#controlling-or-monitoring-one-board-with-another","text":"As the screenshot above shows, it is possible to run multiple OneGPIO extensions at the same time and have the boards interact with each other. This Scratch script will control the LEDs connected to an ESP-8266 and Raspberry Pi by monitoring the state of a switch on an Arduino. This script was run in a browser on a PC in offline mode, allowing the Raspberry Pi to be controlled remotely. NOTE: You may run a single micro-controller or all simultaneously on a single computer, but only a single instance of a microcontroller may be run at a time. For example, you may run a Raspberry Pi and an Arduino simultaneously and use one to control the other. However, you may not run two of the same type of controller at the same. Running two boards that use a serial link is an advanced and experimental feature and not recommended nor officially supported. An example would be running an Arduino and a Picoboard on the same computer at the same time. If you wish to run two boards that use a serial link, you may have to specify the COM port for one of the boards manually. This is done by using the -c option in the launcher. For example, to start the Picoboard extension forcing it to use COM7, you would start the launcher with: s3p -c com7 Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Controlling Or Monitoring One Board With Another"},{"location":"pico/","text":"No Additional Files Are Required For The Picoboard Make sure that you have installed s3-extend on your computer, as explained in the Preparing Your Computer section of this document. You may skip to the next section. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Picoboard"},{"location":"pico/#no-additional-files-are-required-for-the-picoboard","text":"Make sure that you have installed s3-extend on your computer, as explained in the Preparing Your Computer section of this document. You may skip to the next section. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"No Additional Files Are Required For The Picoboard"},{"location":"pico_blocks/","text":"The Picoboard Blocks The blocks consist of a set of HAT blocks with a bump at the left top, boolean blocks that have pointed ends, and reporter blocks rounded in shape. And the blocks translated to Taiwanese. HAT Blocks HAT blocks test for a specific condition. When that condition is met for the first time, all of the blocks under the HAT block execute. When The Selected SENSOR Is Less Or Greater Than A Value This block allows you to select a sensor type, a comparison type, and a value for the comparison. For example, When Light > 15 . If the result of the comparison is TRUE, then all of the blocks below this block are executed once. When Button Is Pressed When the Picoboard button is pressed, all of the blocks below this block are executed once. When The Selected SENSOR Value Is Within A Range This block uses the current value of the selected sensor to check if its value is within the specified range. If it is, then all of the blocks below this block are executed once. Boolean Blocks Boolean blocks test for a specific condition and return either True or False. Is Button Pressed When the button is pressed, this block returns True. If the button is not pressed, it returns FALSE. Is SENSOR Less Or Greater Than A Value This block allows you to select a sensor type, a comparison type, and a value for the comparison. It returns TRUE when the comparison is true and FALSE when the comparison is false. Reporter Blocks Reporter blocks retrieve the current value for a selected sensor. SENSOR Current Value This block reports the current value of the selected sensor. Convert SENSOR To A Specified Range This block scales the current value for the selected sensor and to be within the specified range. For example, if the Slider is set to 100 and the range is set to -240 to 240, this block will return 240. If the Slider is set to 50, this block will return 0, and if the Slider is set to 0, this block will return -240. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Picoboard"},{"location":"pico_blocks/#the-picoboard-blocks","text":"The blocks consist of a set of HAT blocks with a bump at the left top, boolean blocks that have pointed ends, and reporter blocks rounded in shape. And the blocks translated to Taiwanese.","title":"The Picoboard Blocks"},{"location":"pico_blocks/#hat-blocks","text":"HAT blocks test for a specific condition. When that condition is met for the first time, all of the blocks under the HAT block execute.","title":"HAT Blocks"},{"location":"pico_blocks/#when-the-selected-sensor-is-less-or-greater-than-a-value","text":"This block allows you to select a sensor type, a comparison type, and a value for the comparison. For example, When Light > 15 . If the result of the comparison is TRUE, then all of the blocks below this block are executed once.","title":"When The Selected SENSOR Is Less Or Greater Than A Value"},{"location":"pico_blocks/#when-button-is-pressed","text":"When the Picoboard button is pressed, all of the blocks below this block are executed once.","title":"When Button Is Pressed"},{"location":"pico_blocks/#when-the-selected-sensor-value-is-within-a-range","text":"This block uses the current value of the selected sensor to check if its value is within the specified range. If it is, then all of the blocks below this block are executed once.","title":"When The Selected SENSOR Value Is Within A Range"},{"location":"pico_blocks/#boolean-blocks","text":"Boolean blocks test for a specific condition and return either True or False.","title":"Boolean Blocks"},{"location":"pico_blocks/#is-button-pressed","text":"When the button is pressed, this block returns True. If the button is not pressed, it returns FALSE.","title":"Is Button Pressed"},{"location":"pico_blocks/#is-sensor-less-or-greater-than-a-value","text":"This block allows you to select a sensor type, a comparison type, and a value for the comparison. It returns TRUE when the comparison is true and FALSE when the comparison is false.","title":"Is SENSOR Less Or Greater Than A Value"},{"location":"pico_blocks/#reporter-blocks","text":"Reporter blocks retrieve the current value for a selected sensor.","title":"Reporter Blocks"},{"location":"pico_blocks/#sensor-current-value","text":"This block reports the current value of the selected sensor.","title":"SENSOR Current Value"},{"location":"pico_blocks/#convert-sensor-to-a-specified-range","text":"This block scales the current value for the selected sensor and to be within the specified range. For example, if the Slider is set to 100 and the range is set to -240 to 240, this block will return 240. If the Slider is set to 50, this block will return 0, and if the Slider is set to 0, this block will return -240. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Convert SENSOR To A Specified Range"},{"location":"pip_update/","text":"What Is pip? Python packages are available for download from the Python Package Index (aka pypi) . The installation program used to interact with pypi is named pip . The pip utility is often installed alongside Python, but this is not always the case. If you are a Windows user or using Raspberry PI OS on the Raspberry Pi, pip should be available to you without any additional installation steps. However, you will need to make sure that you are using the latest version. Verifying the pip version and instructions on updating pip are explained a little further down on this page. Determining If Pip Is Installed On Your System To determine if pip is installed on your system, open a command or terminal window, and for Windows, type: pip --version For Linux or macOS, type: pip3 --version If a version is reported, you can skip down to the section on verifying if you have the latest version and how to update it if you do not. Otherwise, please continue reading. Installing pip3 For Ubuntu 19.10 And Later Make sure your package list is up to date. Open a terminal and enter: sudo apt update Next, install pip3 by entering the following command in your terminal: sudo apt install python3-pip Installing pip3 For Mac Refer to this article for instructions. Verifying The pip3 Version To properly install the s3-extend package, the latest version of pip must be used. At the time of this writing, that version is 20.2.2. To check the version of pip or pip3 installed on your computer, open a command or terminal window, and type the following: Windows pip --version Mac and Linux (Including Raspberry Pi) pip3 --version Updating pip3 If your pip version is earlier than 20.2.2, you should update it to the latest version. To do so, open a command or terminal window and type the following: Windows python -m pip install --upgrade pip Mac and Linux (Including Raspberry Pi) sudo pip3 install --upgrade pip Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Verifying/Install pip3"},{"location":"pip_update/#what-is-pip","text":"Python packages are available for download from the Python Package Index (aka pypi) . The installation program used to interact with pypi is named pip . The pip utility is often installed alongside Python, but this is not always the case. If you are a Windows user or using Raspberry PI OS on the Raspberry Pi, pip should be available to you without any additional installation steps. However, you will need to make sure that you are using the latest version. Verifying the pip version and instructions on updating pip are explained a little further down on this page.","title":"What Is pip?"},{"location":"pip_update/#determining-if-pip-is-installed-on-your-system","text":"To determine if pip is installed on your system, open a command or terminal window, and for Windows, type: pip --version For Linux or macOS, type: pip3 --version If a version is reported, you can skip down to the section on verifying if you have the latest version and how to update it if you do not. Otherwise, please continue reading.","title":"Determining If Pip Is Installed On Your System"},{"location":"pip_update/#installing-pip3-for-ubuntu-1910-and-later","text":"Make sure your package list is up to date. Open a terminal and enter: sudo apt update Next, install pip3 by entering the following command in your terminal: sudo apt install python3-pip","title":"Installing pip3 For Ubuntu 19.10 And Later"},{"location":"pip_update/#installing-pip3-for-mac","text":"Refer to this article for instructions.","title":"Installing pip3 For Mac"},{"location":"pip_update/#verifying-the-pip3-version","text":"To properly install the s3-extend package, the latest version of pip must be used. At the time of this writing, that version is 20.2.2. To check the version of pip or pip3 installed on your computer, open a command or terminal window, and type the following:","title":"Verifying The pip3 Version"},{"location":"pip_update/#windows","text":"pip --version","title":"Windows"},{"location":"pip_update/#mac-and-linux-including-raspberry-pi","text":"pip3 --version","title":"Mac and Linux (Including Raspberry Pi)"},{"location":"pip_update/#updating-pip3","text":"If your pip version is earlier than 20.2.2, you should update it to the latest version. To do so, open a command or terminal window and type the following:","title":"Updating pip3"},{"location":"pip_update/#windows_1","text":"python -m pip install --upgrade pip","title":"Windows"},{"location":"pip_update/#mac-and-linux-including-raspberry-pi_1","text":"sudo pip3 install --upgrade pip Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Mac and Linux (Including Raspberry Pi)"},{"location":"python_3_7_install/","text":"Python 3.7 (or newer) Verification The Scratch 3 OneGPIO extension servers utilize the latest advances in the Python 3 asyncio library. Python 3.7 or later is required to run the servers. To check if you have Python 3.7 (or newer) installed open a command window and type: python3 -V For Windows, you may need to type: python -V The Python version will be displayed: python3 Python 3.7.2 (default, Dec 31 2018, 14:25:33) [GCC 8.2.0] on linux Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> For Windows users, this may look something like: C:\\Users\\Alan>python Python 3.7.2 (tags/v3.7.2:9a3ffc0492, Dec 23 2018, 23:09:28) [MSC v.1916 64 bit (AMD64)] on win32 Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> Installing The Latest Version of Python 3 Always install the newest stable release of Python 3. Windows Users To install Python 3.7 (or newer), go to the Python home page, and download the latest 3.7 (or later) distribution for your operating system. If you have Python 2.7 installed, you do not need to remove it. During the installation process, if there is a checkbox to add Python 3.7 to your path, make sure it is checked. Mac Users Go to the python.org download page for Mac and download and install the latest version of Python 3. Raspberry Pi Users As of the 2019-09-26 release of Raspbian Buster with desktop and recommended software comes with Python 3.7 pre-installed. If you are using an older version of Raspbian, it is easiest to flash the latest version of Rasbian on to an SD card and start anew. Linux Users If Python 3.7 is not included with your distribution, you may install it and have it coexist with the supplied version, using the pyenv utility. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Python 3 7 install"},{"location":"python_3_7_install/#python-37-or-newer-verification","text":"The Scratch 3 OneGPIO extension servers utilize the latest advances in the Python 3 asyncio library. Python 3.7 or later is required to run the servers. To check if you have Python 3.7 (or newer) installed open a command window and type: python3 -V For Windows, you may need to type: python -V The Python version will be displayed: python3 Python 3.7.2 (default, Dec 31 2018, 14:25:33) [GCC 8.2.0] on linux Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> For Windows users, this may look something like: C:\\Users\\Alan>python Python 3.7.2 (tags/v3.7.2:9a3ffc0492, Dec 23 2018, 23:09:28) [MSC v.1916 64 bit (AMD64)] on win32 Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>>","title":"Python 3.7 (or newer) Verification"},{"location":"python_3_7_install/#installing-the-latest-version-of-python-3","text":"Always install the newest stable release of Python 3.","title":"Installing The Latest Version of Python 3"},{"location":"python_3_7_install/#windows-users","text":"To install Python 3.7 (or newer), go to the Python home page, and download the latest 3.7 (or later) distribution for your operating system. If you have Python 2.7 installed, you do not need to remove it. During the installation process, if there is a checkbox to add Python 3.7 to your path, make sure it is checked.","title":"Windows Users"},{"location":"python_3_7_install/#mac-users","text":"Go to the python.org download page for Mac and download and install the latest version of Python 3.","title":"Mac Users"},{"location":"python_3_7_install/#raspberry-pi-users","text":"As of the 2019-09-26 release of Raspbian Buster with desktop and recommended software comes with Python 3.7 pre-installed. If you are using an older version of Raspbian, it is easiest to flash the latest version of Rasbian on to an SD card and start anew.","title":"Raspberry Pi Users"},{"location":"python_3_7_install/#linux-users","text":"If Python 3.7 is not included with your distribution, you may install it and have it coexist with the supplied version, using the pyenv utility. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Linux Users"},{"location":"python_3_8_install/","text":"Python 3.8 (or newer) Verification The Scratch 3 OneGPIO extension servers utilize the latest advances in the Python 3 asyncio library. Python 3.8 or later is required to run the servers. To check if you have Python 3.8 (or newer) installed, open a command window and type: python3 -V For Windows, you may need to type: python -V The Python version is displayed in the command window. Installing The Latest Version of Python 3 Always install the newest stable release of Python 3. Windows Users To install Python 3.8 (or newer), go to the Python home page, and download the latest 3.8 (or later) distribution for your operating system. If you have Python 2.7 installed, you do not need to remove it. If there is a checkbox to add Python 3.8 to your path during the installation process, make sure it is checked. Mac Users Go to the python.org download page for Mac and download and install the latest version of Python 3. Linux Users If Python 3.8 is not included with your distribution, you may install it and have it coexist with the supplied version using the pyenv utility. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Verify/Install Python 3.8"},{"location":"python_3_8_install/#python-38-or-newer-verification","text":"The Scratch 3 OneGPIO extension servers utilize the latest advances in the Python 3 asyncio library. Python 3.8 or later is required to run the servers. To check if you have Python 3.8 (or newer) installed, open a command window and type: python3 -V For Windows, you may need to type: python -V The Python version is displayed in the command window.","title":"Python 3.8 (or newer) Verification"},{"location":"python_3_8_install/#installing-the-latest-version-of-python-3","text":"Always install the newest stable release of Python 3.","title":"Installing The Latest Version of Python 3"},{"location":"python_3_8_install/#windows-users","text":"To install Python 3.8 (or newer), go to the Python home page, and download the latest 3.8 (or later) distribution for your operating system. If you have Python 2.7 installed, you do not need to remove it. If there is a checkbox to add Python 3.8 to your path during the installation process, make sure it is checked.","title":"Windows Users"},{"location":"python_3_8_install/#mac-users","text":"Go to the python.org download page for Mac and download and install the latest version of Python 3.","title":"Mac Users"},{"location":"python_3_8_install/#linux-users","text":"If Python 3.8 is not included with your distribution, you may install it and have it coexist with the supplied version using the pyenv utility. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Linux Users"},{"location":"robohat_blocks/","text":"The RoboHAT MM1 Blocks The blocks consist of a set of command blocks that are rectangular in shape and reporter blocks rounded in shape. Connecting To A Local Browser Versus A Remote Browser For the RoboHAT extension, you can run Scratch 3 on a local browser or a browser on your PC. For remote operation, in the Remote IP Address block, you must specify the IP address of the computer running s3rh. NOTE: It is recommended that if you wish to access a RoboHAT using a remote browser that you install and use the offline version of the Scratch 3 OneGPIO editor. The reason is, using an online version will most likely result in a security error. Command Blocks Remote IP Address If you wish to control the Raspberry Pi from a browser running on your PC, enter the Raspberry Pi's IP address into this block. This block should be executed before any of the other Raspberry Pi blocks and executed only once. If you wish to use a local browser running on the Raspberry Pi, do not use the Remote IP block. Write Digital This block allows you to select a pin and set its output to either a one or zero. It has two parameters. The first is a drop-down list of valid PINs. The second parameter is the output value. It also is a drop-down list and contains the values zero and one. Write PWM This block allows you to select a pin and set its PWM output to be a value between 0 and 100%. It has two parameters. The first is a drop-down list of valid PINs. The second parameter allows you to fill in a PWM value. If you use a PWM value of less than zero, it will be set to 0 internally. If you set the value to greater than 100, it will be set to 100. Write Servo This block allows you to control the angle of a servo motor. It contains two parameters. The first is a drop-down list of valid PINs. The second specifies the angle in degrees. The value is limited to be between 0 and 180. Reporter Blocks Read Digital This block allows you to read the current state of a digital input pin. It has one parameter, a drop-down list containing all the valid PINs. It reports a value of zero or one. Read Analog This block allows you to read the current state of an analog input pin. It has one parameter, a drop-down list containing all the valid Pins. It reports a value between 0 and 1023. Read MPU This block allows you to read any of the MPU9250 registers selected in the drop-down list: AX: Accelerometer X Register AY: Accelerometer Y Register AZ: Accelerometer Z Register GX: GyroScope X Register GY: GyroScope Y Register GZ: GyroScope Z Register MX: Magnetometer X Register MY: Magnetometer Y Register MZ: Magnetometer Z Register Temperature Read INA This block allows you to read any of the INA219 registers selected in the drop-down list: V: Bus Voltage A: Bus Current Supply: Supply Voltage Shunt: Shunt Voltage Power: Power Power: Power Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"RoboHAT MM1"},{"location":"robohat_blocks/#the-robohat-mm1-blocks","text":"The blocks consist of a set of command blocks that are rectangular in shape and reporter blocks rounded in shape.","title":"The RoboHAT MM1 Blocks"},{"location":"robohat_blocks/#connecting-to-a-local-browser-versus-a-remote-browser","text":"For the RoboHAT extension, you can run Scratch 3 on a local browser or a browser on your PC. For remote operation, in the Remote IP Address block, you must specify the IP address of the computer running s3rh. NOTE: It is recommended that if you wish to access a RoboHAT using a remote browser that you install and use the offline version of the Scratch 3 OneGPIO editor. The reason is, using an online version will most likely result in a security error.","title":"Connecting To A Local Browser Versus A Remote Browser"},{"location":"robohat_blocks/#command-blocks","text":"","title":"Command Blocks"},{"location":"robohat_blocks/#remote-ip-address","text":"If you wish to control the Raspberry Pi from a browser running on your PC, enter the Raspberry Pi's IP address into this block. This block should be executed before any of the other Raspberry Pi blocks and executed only once. If you wish to use a local browser running on the Raspberry Pi, do not use the Remote IP block.","title":"Remote IP Address"},{"location":"robohat_blocks/#write-digital","text":"This block allows you to select a pin and set its output to either a one or zero. It has two parameters. The first is a drop-down list of valid PINs. The second parameter is the output value. It also is a drop-down list and contains the values zero and one.","title":"Write Digital"},{"location":"robohat_blocks/#write-pwm","text":"This block allows you to select a pin and set its PWM output to be a value between 0 and 100%. It has two parameters. The first is a drop-down list of valid PINs. The second parameter allows you to fill in a PWM value. If you use a PWM value of less than zero, it will be set to 0 internally. If you set the value to greater than 100, it will be set to 100.","title":"Write PWM"},{"location":"robohat_blocks/#write-servo","text":"This block allows you to control the angle of a servo motor. It contains two parameters. The first is a drop-down list of valid PINs. The second specifies the angle in degrees. The value is limited to be between 0 and 180.","title":"Write Servo"},{"location":"robohat_blocks/#reporter-blocks","text":"","title":"Reporter Blocks"},{"location":"robohat_blocks/#read-digital","text":"This block allows you to read the current state of a digital input pin. It has one parameter, a drop-down list containing all the valid PINs. It reports a value of zero or one.","title":"Read Digital"},{"location":"robohat_blocks/#read-analog","text":"This block allows you to read the current state of an analog input pin. It has one parameter, a drop-down list containing all the valid Pins. It reports a value between 0 and 1023.","title":"Read Analog"},{"location":"robohat_blocks/#read-mpu","text":"This block allows you to read any of the MPU9250 registers selected in the drop-down list: AX: Accelerometer X Register AY: Accelerometer Y Register AZ: Accelerometer Z Register GX: GyroScope X Register GY: GyroScope Y Register GZ: GyroScope Z Register MX: Magnetometer X Register MY: Magnetometer Y Register MZ: Magnetometer Z Register Temperature","title":"Read MPU"},{"location":"robohat_blocks/#read-ina","text":"This block allows you to read any of the INA219 registers selected in the drop-down list: V: Bus Voltage A: Bus Current Supply: Supply Voltage Shunt: Shunt Voltage Power: Power Power: Power Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Read INA"},{"location":"rpi/","text":"No Additional Files Are Required For The Raspberry Pi Make sure that you have installed s3-extend on your Raspberry Pi, as explained in the Preparing Your Computer section of this document. You may skip to the next section. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Raspberry Pi"},{"location":"rpi/#no-additional-files-are-required-for-the-raspberry-pi","text":"Make sure that you have installed s3-extend on your Raspberry Pi, as explained in the Preparing Your Computer section of this document. You may skip to the next section. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"No Additional Files Are Required For The Raspberry Pi"},{"location":"rpi_blocks/","text":"The Raspberry Pi Blocks The blocks consist of a set of command blocks that are rectangular in shape and reporter blocks rounded in shape. Pin numbers are expressed as GPIO pin numbers. Connecting To A Local Browser Versus A Remote Browser For the Raspberry Pi extension, you can run Scratch 3 on a local browser or a browser on your PC. For remote operation, you must specify the Raspberry Pi's WiFi or Ethernet address in the Remote IP Address block. NOTE : It is recommended that if you wish to access a Raspberry Pi using a remote browser , that you install and use the offline version of the Scratch 3 OneGPIO editor. The reason is, using an online version will most likely result in a security error. Command Blocks Remote IP Address If you wish to control the Raspberry Pi from a browser running on your PC, enter the Raspberry Pi's IP address into this block. This block should be executed before any of the other Raspberry Pi blocks and executed only once. If you wish to use a local browser running on the Raspberry Pi, do not use the Remote IP block. Write Digital This block allows you to select a pin and set its output to either a one or zero. It has two parameters. The first is a drop-down list of valid PINs. The second parameter is the output value. It also is a drop-down list and contains the values zero and one. Write PWM This block allows you to select a pin and set its PWM output to be a value between 0 and 100%. It has two parameters. The first is a drop-down list of valid PINs. The second parameter allows you to fill in a PWM value. If you use a PWM value of less than zero, it will be set to 0 internally. If you set the value to greater than 100, it will be set to 100. Tone If you connect a Piezo type buzzer to a pin, this block will generate a tone on the pin for the frequency and duration specified. It contains three parameters. The first is a drop-down list of valid PINs. The second allows you to specify the frequency of the tone in Herz. The third parameter specifies the tone duration in milliseconds. If a value greater than 5000 is entered, the value will be set to 5000 internally, limiting the maximum playing time to 5 seconds. Write Servo This block allows you to control the angle of a servo motor. It contains two parameters. The first is a drop-down list of valid PINs. The second specifies the angle in degrees. The value is limited to be between 0 and 180. Reporter Blocks Read Digital This block allows you to read the current state of a digital input pin. It has one parameter, a drop-down list containing all the valid PINs. It reports a value of zero or one. Read Sonar This block allows you to connect an HC-SR04 type device. It has two parameters, both containing a drop-down list of valid PINs. The first parameter allows you to select a trigger pin, and the second an echo pin. It returns the measured distance in centimeters. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Raspberry Pi"},{"location":"rpi_blocks/#the-raspberry-pi-blocks","text":"The blocks consist of a set of command blocks that are rectangular in shape and reporter blocks rounded in shape. Pin numbers are expressed as GPIO pin numbers.","title":"The Raspberry Pi Blocks"},{"location":"rpi_blocks/#connecting-to-a-local-browser-versus-a-remote-browser","text":"For the Raspberry Pi extension, you can run Scratch 3 on a local browser or a browser on your PC. For remote operation, you must specify the Raspberry Pi's WiFi or Ethernet address in the Remote IP Address block. NOTE : It is recommended that if you wish to access a Raspberry Pi using a remote browser , that you install and use the offline version of the Scratch 3 OneGPIO editor. The reason is, using an online version will most likely result in a security error.","title":"Connecting To A Local Browser Versus A Remote Browser"},{"location":"rpi_blocks/#command-blocks","text":"","title":"Command Blocks"},{"location":"rpi_blocks/#remote-ip-address","text":"If you wish to control the Raspberry Pi from a browser running on your PC, enter the Raspberry Pi's IP address into this block. This block should be executed before any of the other Raspberry Pi blocks and executed only once. If you wish to use a local browser running on the Raspberry Pi, do not use the Remote IP block.","title":"Remote IP Address"},{"location":"rpi_blocks/#write-digital","text":"This block allows you to select a pin and set its output to either a one or zero. It has two parameters. The first is a drop-down list of valid PINs. The second parameter is the output value. It also is a drop-down list and contains the values zero and one.","title":"Write Digital"},{"location":"rpi_blocks/#write-pwm","text":"This block allows you to select a pin and set its PWM output to be a value between 0 and 100%. It has two parameters. The first is a drop-down list of valid PINs. The second parameter allows you to fill in a PWM value. If you use a PWM value of less than zero, it will be set to 0 internally. If you set the value to greater than 100, it will be set to 100.","title":"Write PWM"},{"location":"rpi_blocks/#tone","text":"If you connect a Piezo type buzzer to a pin, this block will generate a tone on the pin for the frequency and duration specified. It contains three parameters. The first is a drop-down list of valid PINs. The second allows you to specify the frequency of the tone in Herz. The third parameter specifies the tone duration in milliseconds. If a value greater than 5000 is entered, the value will be set to 5000 internally, limiting the maximum playing time to 5 seconds.","title":"Tone"},{"location":"rpi_blocks/#write-servo","text":"This block allows you to control the angle of a servo motor. It contains two parameters. The first is a drop-down list of valid PINs. The second specifies the angle in degrees. The value is limited to be between 0 and 180.","title":"Write Servo"},{"location":"rpi_blocks/#reporter-blocks","text":"","title":"Reporter Blocks"},{"location":"rpi_blocks/#read-digital","text":"This block allows you to read the current state of a digital input pin. It has one parameter, a drop-down list containing all the valid PINs. It reports a value of zero or one.","title":"Read Digital"},{"location":"rpi_blocks/#read-sonar","text":"This block allows you to connect an HC-SR04 type device. It has two parameters, both containing a drop-down list of valid PINs. The first parameter allows you to select a trigger pin, and the second an echo pin. It returns the measured distance in centimeters. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Read Sonar"},{"location":"rpi_pico/","text":"Raspberry Pi Pico Before using the Raspberry Pi Pico extension, install the Telemetrix4RpiPico server software onto the Pico. This link contains the installation instructions. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Raspberry Pi Pico"},{"location":"rpi_pico/#raspberry-pi-pico","text":"Before using the Raspberry Pi Pico extension, install the Telemetrix4RpiPico server software onto the Pico. This link contains the installation instructions. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Raspberry Pi Pico"},{"location":"rpi_pico_blocks/","text":"The Raspberry Pi Pico Blocks The blocks consist of a set of command blocks that are rectangular in shape and reporter blocks rounded in shape. Command Blocks Write Digital This block allows you to select a pin and set its output to either a one or zero. It has two parameters. The first is a drop-down list of valid PINs. The second parameter is the output value. It also is a drop-down list and contains the values zero and one. NOTE: Pin 25 controls the board LED. Write PWM This block allows you to select a pin and set its PWM output to be a value between 0 and 100%. It has two parameters. The first is a drop-down list of valid PINs. The second parameter allows you to fill in a PWM value. If you use a PWM value of less than zero, it will be set to 0 internally. If you set the value to greater than 100, it will be set to 100. NOTE: Pin 25 controls the board LED. Write Servo This block allows you to control the angle of a servo motor. It contains two parameters. The first is a drop-down list of valid PINs. The second specifies the angle in degrees. The value is limited to be between 0 and 180. Reporter Blocks Read Digital This block allows you to read the current state of a digital input pin. It has two parameters, a drop-down list containing all the valid GPIO pins and a parameter to enable or disable the pull-up resistor on the Pico GPIO pin. It reports the raw value of zero or one. Read Analog This block allows you to read the current state of an analog input pin identified by its ADC number. ADC Number GPIO Pin Number 0 26 1 27 2 28 3 Temperature Sensor It has one parameter, a drop-down list containing all the ADC Pins. It reports a value between 0 and 4095. Read Sonar This block allows you to connect an HC-SR04 type device. It has two parameters, both containing a drop-down list of valid PINs. The first parameter allows you to select a trigger pin, and the second an echo pin. It returns the measured distance in centimeters. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Raspberry Pi Pico"},{"location":"rpi_pico_blocks/#the-raspberry-pi-pico-blocks","text":"The blocks consist of a set of command blocks that are rectangular in shape and reporter blocks rounded in shape.","title":"The Raspberry Pi Pico Blocks"},{"location":"rpi_pico_blocks/#command-blocks","text":"","title":"Command Blocks"},{"location":"rpi_pico_blocks/#write-digital","text":"This block allows you to select a pin and set its output to either a one or zero. It has two parameters. The first is a drop-down list of valid PINs. The second parameter is the output value. It also is a drop-down list and contains the values zero and one. NOTE: Pin 25 controls the board LED.","title":"Write Digital"},{"location":"rpi_pico_blocks/#write-pwm","text":"This block allows you to select a pin and set its PWM output to be a value between 0 and 100%. It has two parameters. The first is a drop-down list of valid PINs. The second parameter allows you to fill in a PWM value. If you use a PWM value of less than zero, it will be set to 0 internally. If you set the value to greater than 100, it will be set to 100. NOTE: Pin 25 controls the board LED.","title":"Write PWM"},{"location":"rpi_pico_blocks/#write-servo","text":"This block allows you to control the angle of a servo motor. It contains two parameters. The first is a drop-down list of valid PINs. The second specifies the angle in degrees. The value is limited to be between 0 and 180.","title":"Write Servo"},{"location":"rpi_pico_blocks/#reporter-blocks","text":"","title":"Reporter Blocks"},{"location":"rpi_pico_blocks/#read-digital","text":"This block allows you to read the current state of a digital input pin. It has two parameters, a drop-down list containing all the valid GPIO pins and a parameter to enable or disable the pull-up resistor on the Pico GPIO pin. It reports the raw value of zero or one.","title":"Read Digital"},{"location":"rpi_pico_blocks/#read-analog","text":"This block allows you to read the current state of an analog input pin identified by its ADC number. ADC Number GPIO Pin Number 0 26 1 27 2 28 3 Temperature Sensor It has one parameter, a drop-down list containing all the ADC Pins. It reports a value between 0 and 4095.","title":"Read Analog"},{"location":"rpi_pico_blocks/#read-sonar","text":"This block allows you to connect an HC-SR04 type device. It has two parameters, both containing a drop-down list of valid PINs. The first parameter allows you to select a trigger pin, and the second an echo pin. It returns the measured distance in centimeters. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Read Sonar"},{"location":"s3-extend/","text":"Installing The Python Extension Servers For Windows Open a command window and type: pip install s3-extend For Mac And Linux (including Raspberry Pi) Open a command window and type: sudo pip3 install s3-extend It may take several minutes to download and install the necessary Python packages to support all the extensions. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Install s3-extend"},{"location":"s3-extend/#installing-the-python-extension-servers","text":"","title":"Installing The Python Extension Servers"},{"location":"s3-extend/#for-windows","text":"Open a command window and type: pip install s3-extend","title":"For Windows"},{"location":"s3-extend/#for-mac-and-linux-including-raspberry-pi","text":"Open a command window and type: sudo pip3 install s3-extend It may take several minutes to download and install the necessary Python packages to support all the extensions. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"For Mac And Linux (including Raspberry Pi)"},{"location":"s3-local/","text":"Launching Scratch 3 Offline First, you need to download the files. Go to the s3onegpio GitHub Repository, gh-pages branch. Click on the green Clone or download button at the upper right. Save the file and then unzip it. This will create a directory called s3onegpio-gh-pages . Using your file explorer tool, look for index.html in the s3onegpio-gh-pages directory and double click on index.html. The Scratch 3 OneGPIO editor should open. To access the OneGPIO extensions, click on the Extension Icon at the lower left of the Scratch 3 Editor Window. Scroll down and select the OneGPIO extension you wish to use. You may then choose additional OneGPIO extensions. Go to the \"Using OneGPIO Extension Blocks\" section for information on block usage. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Starting Scratch3 Offline"},{"location":"s3-local/#launching-scratch-3-offline","text":"First, you need to download the files. Go to the s3onegpio GitHub Repository, gh-pages branch. Click on the green Clone or download button at the upper right. Save the file and then unzip it. This will create a directory called s3onegpio-gh-pages . Using your file explorer tool, look for index.html in the s3onegpio-gh-pages directory and double click on index.html. The Scratch 3 OneGPIO editor should open. To access the OneGPIO extensions, click on the Extension Icon at the lower left of the Scratch 3 Editor Window. Scroll down and select the OneGPIO extension you wish to use. You may then choose additional OneGPIO extensions. Go to the \"Using OneGPIO Extension Blocks\" section for information on block usage. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Launching Scratch 3 Offline"},{"location":"s3-web/","text":"Launching Scratch 3 Online If you have a reliable internet connection and wish to run Scratch 3 OneGPIO online, click this link. To access the OneGPIO extensions, click on the Extension Icon at the lower left of the Scratch 3 Editor Window. Scroll down and select the OneGPIO extension you wish to use. You may then choose additional OneGPIO extensions. Go to the \"Using OneGPIO Extension Blocks\" section for information on block usage. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Starting Scratch3 Online"},{"location":"s3-web/#launching-scratch-3-online","text":"If you have a reliable internet connection and wish to run Scratch 3 OneGPIO online, click this link. To access the OneGPIO extensions, click on the Extension Icon at the lower left of the Scratch 3 Editor Window. Scroll down and select the OneGPIO extension you wish to use. You may then choose additional OneGPIO extensions. Go to the \"Using OneGPIO Extension Blocks\" section for information on block usage. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Launching Scratch 3 Online"},{"location":"shutdown/","text":"To properly close the s3a, s3e, s3p, s3r, s3rp, and s3rh launchers, go into the command or terminal window and type Control-C. This will ensure that all of the processes started by a launcher are killed correctly. If you kill the command or terminal or window before pressing Control-C, processes may be left in a running state, preventing you from restarting the launcher. If you forget to use Control-C and cannot restart the extension with its associated launcher, reboot your computer to kill the running processes. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Performing A Clean Shutdown"},{"location":"translate/","text":"Block Text And Alert Translations When you select a language by clicking on the globe icon in the Scratch editor, if a translation is available for the selected language, the OneGPIO Scratch block text appears in that language. If translation for your selected language is not available, then the text will be in English. If your language is not currently supported and you wish to provide a translation, I encourage you to do so. Not only will you be listed as a contributor, but others who are speakers of your language will thank you as well. Providing A Translation To provide a translation for the Arduino, ESP-8266, and Raspberry Pi extensions, you simply update the translate.txt file. For the Picoboard, you update the picoboard.txt file . And for the CircuitPlayground Express, you update the playground_express.txt file. You then either generate a GitHub pull request or if you are unfamiliar with Git and pull requests, submit it as an issue to https://github.com/MrYsLab/s3onegpio/issues. If you submit the translation as an issue, please call the issue: Translation For LANGUAGE BEING ADDED , where LANGUAGE BEING ADDED is the name of your language. I will then incorporate your translation into the source code and update the Scratch 3 Editor to contain your translation. Translations.txt, Picoboard.txt, And Playground_Express.txt The translations.txt, picoboard.txt, and playground_express.txt files contain the text for all of the blocks and alerts for the OneGPIO extensions. Let's look at the Sonar block to understand what needs to be added to the translations.txt file. Here we see the English and Brazilian Portuguese blocks for the Sonar block. Here is the language specification for the block in translation.txt. const FormSonarRead = { 'pt-br': 'Ler Dist\u00e2ncia: Sonar em T[TRIGGER_PIN] E[ECHO_PIN]', 'pt': 'Ler Dist\u00e2ncia: Sonar em T[TRIGGER_PIN] E[ECHO_PIN]', 'en': 'Read SONAR T [TRIGGER_PIN] E [ECHO_PIN]' }; Each language has its own line in the list of translations, and each line begins with the language's identifier. In this case, pt-br for Brazilian Portuguese, pt for Portuguese, and en for English. Any text between square brackets is a placeholder for a parameter field in the block. Do not translate the text within the square brackets, and please use them as is, no matter the alphabet being used. All other text should be translated. You are free to use as many words as you need. The parameters (text in square brackets) may be placed anywhere within the translation that makes sense for your language. Alert Translation Alerts do not contain any parameters. The alert for the ESP-8266 is formatted a little differently. // ESP-8266 Alert const FormAlrt = { 'pt-br': { title: \"Aten\u00e7\u00e3o\", text: \"Informe o endere\u00e7o IP da placa ESP-8266 no bloco apropriado\", icon: \"info\", }, 'pt': { title: \"Aten\u00e7\u00e3o\", text: \"Informe o endere\u00e7o IP da placa ESP-8266 no bloco apropriado\", icon: \"info\", }, 'en': { title: \"Reminder\", text: \"Enter the IP Address of the ESP-8266 Into The IP Address Block\", icon: \"info\", } }; For this translation, translate the text in the \"title\" and \"text\" fields, but do not translate the \"icon\" field. Please retain the words title, text, and icon in English. If you have any questions, please feel free to email me at: MisterYsLab@gmail.com Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Contributing Block Translations"},{"location":"translate/#block-text-and-alert-translations","text":"When you select a language by clicking on the globe icon in the Scratch editor, if a translation is available for the selected language, the OneGPIO Scratch block text appears in that language. If translation for your selected language is not available, then the text will be in English. If your language is not currently supported and you wish to provide a translation, I encourage you to do so. Not only will you be listed as a contributor, but others who are speakers of your language will thank you as well.","title":"Block Text And Alert Translations"},{"location":"translate/#providing-a-translation","text":"To provide a translation for the Arduino, ESP-8266, and Raspberry Pi extensions, you simply update the translate.txt file. For the Picoboard, you update the picoboard.txt file . And for the CircuitPlayground Express, you update the playground_express.txt file. You then either generate a GitHub pull request or if you are unfamiliar with Git and pull requests, submit it as an issue to https://github.com/MrYsLab/s3onegpio/issues. If you submit the translation as an issue, please call the issue: Translation For LANGUAGE BEING ADDED , where LANGUAGE BEING ADDED is the name of your language. I will then incorporate your translation into the source code and update the Scratch 3 Editor to contain your translation.","title":"Providing A Translation"},{"location":"translate/#translationstxt-picoboardtxt-and-playground_expresstxt","text":"The translations.txt, picoboard.txt, and playground_express.txt files contain the text for all of the blocks and alerts for the OneGPIO extensions. Let's look at the Sonar block to understand what needs to be added to the translations.txt file. Here we see the English and Brazilian Portuguese blocks for the Sonar block. Here is the language specification for the block in translation.txt. const FormSonarRead = { 'pt-br': 'Ler Dist\u00e2ncia: Sonar em T[TRIGGER_PIN] E[ECHO_PIN]', 'pt': 'Ler Dist\u00e2ncia: Sonar em T[TRIGGER_PIN] E[ECHO_PIN]', 'en': 'Read SONAR T [TRIGGER_PIN] E [ECHO_PIN]' }; Each language has its own line in the list of translations, and each line begins with the language's identifier. In this case, pt-br for Brazilian Portuguese, pt for Portuguese, and en for English. Any text between square brackets is a placeholder for a parameter field in the block. Do not translate the text within the square brackets, and please use them as is, no matter the alphabet being used. All other text should be translated. You are free to use as many words as you need. The parameters (text in square brackets) may be placed anywhere within the translation that makes sense for your language.","title":"Translations.txt, Picoboard.txt, And Playground_Express.txt"},{"location":"translate/#alert-translation","text":"Alerts do not contain any parameters. The alert for the ESP-8266 is formatted a little differently. // ESP-8266 Alert const FormAlrt = { 'pt-br': { title: \"Aten\u00e7\u00e3o\", text: \"Informe o endere\u00e7o IP da placa ESP-8266 no bloco apropriado\", icon: \"info\", }, 'pt': { title: \"Aten\u00e7\u00e3o\", text: \"Informe o endere\u00e7o IP da placa ESP-8266 no bloco apropriado\", icon: \"info\", }, 'en': { title: \"Reminder\", text: \"Enter the IP Address of the ESP-8266 Into The IP Address Block\", icon: \"info\", } }; For this translation, translate the text in the \"title\" and \"text\" fields, but do not translate the \"icon\" field. Please retain the words title, text, and icon in English. If you have any questions, please feel free to email me at: MisterYsLab@gmail.com Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"Alert Translation"},{"location":"under_the_hood/","text":"Scratch 3 OneGPIO Software Components The Scratch 3 OneGPIO extensions consist of two major components. The Modified Scratch 3 Editor The first of the major components is the modified Scratch 3 editor, depicted as the terminal on the left side of the illustration above. The modified editor uses all of the Scratch 3 team's code but adds the additional code to create the custom Scratch blocks to support the OneGPIO extensions. If you would like additional information about how the OneGPIO extensions were created and added to the Scratch 3 editor, please refer to the Bots In Pieces blog. The OneGPIO Extension Servers The second major component for each of the OneGPIO extensions is the Extension Server, depicted in the center of the illustration. Each board type has a specific associated Extension Server, using the Python Banyan Framework to implement the OneGPIO messaging protocol. The OneGPIO design concept assures excellent performance and simplifies the design and implementation for each extension server. Each server utilizes three Python Banyan components. The first is the Backplane, a shared message distributor used by all of the extension servers. Each Extension Server utilizes a unique instance of the WebSocket Gateway . It provides a communication channel between the Scratch 3 editor running in the browser and the Python code interacting with microcontroller hardware. A unique IP port number is assigned to each WebSocket Gateway. Finally, each Extension Server supports its connected microcontroller using a unique Hardware Gateway. The Hardware Gateway translates the platform-independent OneGPIO control and report messages to hardware-specific messages. The transport mechanism used between the Hardware Gateway and its associated micro-controller varies, depending upon the micro-controller in use. For example, the Arduino uses a hardwired, USB-Serial interface is used. The Raspberry Pi and ESP-8266 use a WiFi connection. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"The OneGPIO Gateways and Launchers"},{"location":"under_the_hood/#scratch-3-onegpio-software-components","text":"The Scratch 3 OneGPIO extensions consist of two major components.","title":"Scratch 3 OneGPIO Software Components"},{"location":"under_the_hood/#the-modified-scratch-3-editor","text":"The first of the major components is the modified Scratch 3 editor, depicted as the terminal on the left side of the illustration above. The modified editor uses all of the Scratch 3 team's code but adds the additional code to create the custom Scratch blocks to support the OneGPIO extensions. If you would like additional information about how the OneGPIO extensions were created and added to the Scratch 3 editor, please refer to the Bots In Pieces blog.","title":"The Modified Scratch 3 Editor"},{"location":"under_the_hood/#the-onegpio-extension-servers","text":"The second major component for each of the OneGPIO extensions is the Extension Server, depicted in the center of the illustration. Each board type has a specific associated Extension Server, using the Python Banyan Framework to implement the OneGPIO messaging protocol. The OneGPIO design concept assures excellent performance and simplifies the design and implementation for each extension server. Each server utilizes three Python Banyan components. The first is the Backplane, a shared message distributor used by all of the extension servers. Each Extension Server utilizes a unique instance of the WebSocket Gateway . It provides a communication channel between the Scratch 3 editor running in the browser and the Python code interacting with microcontroller hardware. A unique IP port number is assigned to each WebSocket Gateway. Finally, each Extension Server supports its connected microcontroller using a unique Hardware Gateway. The Hardware Gateway translates the platform-independent OneGPIO control and report messages to hardware-specific messages. The transport mechanism used between the Hardware Gateway and its associated micro-controller varies, depending upon the micro-controller in use. For example, the Arduino uses a hardwired, USB-Serial interface is used. The Raspberry Pi and ESP-8266 use a WiFi connection. Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"The OneGPIO Extension Servers"},{"location":"usage/","text":"An Overview Of Using The OneGPIO Extensions Now that all the necessary software is installed on your computer and your physical computing device, it is time to try things out. Here is a brief recommended procedure for using Scratch 3 with your physical computing projects: Step 1: With the power disconnected from your micro-controller, attach the sensors and actuators to the micro-controller. Never add or remove sensors or actuators with power applied - you may permanently damage your micro-controller. Step 2: Apply power to the micro-controller. Step 3: Start the OneGPIO server code by opening a terminal window for each microcontroller you wish to use. Then, enter the command for the specific micro-controller: s3a - for the Arduino s3c - for the Adafruit Circuit Playground Express s3e - for the ESP-8266 s3p - for the Picoboard s3r - for the Raspberry Pi s3rp for the Raspberry Pi Pico s3rh - for the RoboHAT MM1 Step 4: Start Scratch 3, select an extension and create and run your Scratch scripts. If you are using the ESP-8266 extension, you must use the ESP-8266 Connect IP Address block to connect to the ESP-8266. When successfully connected, the red LED on the ESP-8266 NodeMCU is extinguished. Step 5: To power down, dismiss the OneGPIO server by going to the window opened in step 3 and pressing Control-C. You may need to do this twice. Finally, dismiss the Web Browser tab running Scratch 3. SPECIAL NOTE: Please use Control-C before dismissing the window. If you dismiss the window without pressing Control-C first, the next time you start the server, it may fail. In that case, reboot your computer, and the server should succeed. There is more detail about these steps in the following sections. Please read those sections before proceeding. NOTE: You may run a single micro-controller or all simultaneously on a single computer, but only a single instance of a microcontroller may be run at a time. For example, you may run a Raspberry Pi and an Arduino simultaneously and use one to control the other. However, you may not run two of the same type of controllers at the same. Running two boards that use a serial link is an advanced and experimental feature and not recommended nor officially supported. An example would be running an Arduino and a Picoboard on the same computer at the same time. If you wish to run two boards that use a serial link, you may have to specify the COM port for one of the boards manually. This is done by using the -c option in the launcher. For example, to start the Picoboard extension forcing it to use COM7, you would start the launcher with: s3p -c com7 Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"How To Use The OneGPIO Extensions"},{"location":"usage/#an-overview-of-using-the-onegpio-extensions","text":"Now that all the necessary software is installed on your computer and your physical computing device, it is time to try things out. Here is a brief recommended procedure for using Scratch 3 with your physical computing projects: Step 1: With the power disconnected from your micro-controller, attach the sensors and actuators to the micro-controller. Never add or remove sensors or actuators with power applied - you may permanently damage your micro-controller. Step 2: Apply power to the micro-controller. Step 3: Start the OneGPIO server code by opening a terminal window for each microcontroller you wish to use. Then, enter the command for the specific micro-controller: s3a - for the Arduino s3c - for the Adafruit Circuit Playground Express s3e - for the ESP-8266 s3p - for the Picoboard s3r - for the Raspberry Pi s3rp for the Raspberry Pi Pico s3rh - for the RoboHAT MM1 Step 4: Start Scratch 3, select an extension and create and run your Scratch scripts. If you are using the ESP-8266 extension, you must use the ESP-8266 Connect IP Address block to connect to the ESP-8266. When successfully connected, the red LED on the ESP-8266 NodeMCU is extinguished. Step 5: To power down, dismiss the OneGPIO server by going to the window opened in step 3 and pressing Control-C. You may need to do this twice. Finally, dismiss the Web Browser tab running Scratch 3. SPECIAL NOTE: Please use Control-C before dismissing the window. If you dismiss the window without pressing Control-C first, the next time you start the server, it may fail. In that case, reboot your computer, and the server should succeed. There is more detail about these steps in the following sections. Please read those sections before proceeding. NOTE: You may run a single micro-controller or all simultaneously on a single computer, but only a single instance of a microcontroller may be run at a time. For example, you may run a Raspberry Pi and an Arduino simultaneously and use one to control the other. However, you may not run two of the same type of controllers at the same. Running two boards that use a serial link is an advanced and experimental feature and not recommended nor officially supported. An example would be running an Arduino and a Picoboard on the same computer at the same time. If you wish to run two boards that use a serial link, you may have to specify the COM port for one of the boards manually. This is done by using the -c option in the launcher. For example, to start the Picoboard extension forcing it to use COM7, you would start the launcher with: s3p -c com7 Copyright (C) 2019-2021 Alan Yorinks All Rights Reserved","title":"An Overview Of Using The OneGPIO Extensions"}]}