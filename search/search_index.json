{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"Installation And Usage Guide OneGPIO Scratch 3 Extensions For: Arduino, Raspberry Pi, ESP-8266, Raspberry Pi Pico,  Picoboard, Circuit Playground Express,  RoboHAT MM1, ESP-32 <p> Control your favorite physical computing device using Scratch 3. <ul> <li>Windows, Mac, and Linux, including Raspberry Pi, are supported.</li> <li>Launch Scratch 3 via the internet or locally on your computer.</li> <li>Control your Raspberry Pi or a Raspberry Pi/RoboHAT combination either locally or from your PC. </li> </ul>"},{"location":"acks/","title":"Thank You","text":""},{"location":"acks/#a-simple-expression-of-thanks","title":"A Simple Expression Of Thanks","text":"<p>This project would not have been possible without the help of Hiro Osaki and Edson Sidnei Sobreira, and indirectly, Seiji Matsushita.</p> <p>Hiro wrote an excellent article, \"How to Develop Your Own Block for Scratch 3.0\", that demystified the Scratch 3 Extension Specification. In addition, he unselfishly  provided some personal guidance.</p> <p>Edson provided some early testing and guidance that resulted in simplifying the user's interaction with the OneGPIO extensions. Also, he pointed me to the work of Seiji Matsushita, who implemented language translation. The translation code I implemented is based on Seiji's work.</p> <p>Edson curates the HackEduca Web site.</p>"},{"location":"acks/#language-translation-acknowledgements","title":"Language Translation Acknowledgements","text":"<p>Brazilian Portuguese and Portuguese: Edson Sidnei Sobreira</p> <p>French: Florian Becard And Francois MOCQ</p> <p>Chinese: https://gasolin.idv.tw/, Justina Hsu, Henry586</p> <p>Polish: Tomasz Regdos</p> <p>Japanese : KigenHasebe</p> <p>German: christianimmler</p> <p>Dutch:  tivanboven</p>"},{"location":"ard_blocks/","title":"Arduino","text":""},{"location":"ard_blocks/#the-arduino-uno-blocks","title":"The Arduino Uno Blocks","text":"<p>The blocks consist of a set of command blocks that are rectangular in shape and reporter blocks rounded in shape.</p>"},{"location":"ard_blocks/#command-blocks","title":"Command Blocks","text":""},{"location":"ard_blocks/#write-digital","title":"Write Digital","text":"<p>This block allows you to select a pin and set its output to either a one or zero. It has two parameters. The first is a drop-down list of valid PINs. The second parameter is the output value. It also is a drop-down list and contains the values zero and one.</p>"},{"location":"ard_blocks/#write-pwm","title":"Write PWM","text":"<p>This block allows you to select a pin and set its PWM output to be a value between 0 and 100%. It has two parameters. The first is a drop-down list of valid PINs. The second parameter allows you to fill in a PWM value. If you use a PWM value of less than zero, it will be set to 0 internally. If you set the value to greater than 100, it will be set to 100.</p>"},{"location":"ard_blocks/#tone","title":"Tone","text":"<p>If you connect a Piezo type buzzer to a pin, this block will generate a tone on the pin for the frequency and duration specified. It contains three parameters. The first is a drop-down list of valid PINs. The second allows you to specify the frequency of the tone in Herz. The third parameter specifies the tone duration in milliseconds. If a value greater than 5000 is entered, the value will be set to 5000 internally, limiting the maximum playing time to 5 seconds.</p>"},{"location":"ard_blocks/#write-servo","title":"Write Servo","text":"<p>This block allows you to control the angle of a servo motor. It contains two parameters. The first is a drop-down list of valid PINs. The second specifies the angle in degrees. The value is limited to be between 0 and 180.</p>"},{"location":"ard_blocks/#reporter-blocks","title":"Reporter Blocks","text":""},{"location":"ard_blocks/#read-digital","title":"Read Digital","text":"<p>This block allows you to read the current state of a digital input pin. It has one parameter, a drop-down list containing all the valid PINs. It reports a value of zero or one.</p>"},{"location":"ard_blocks/#read-analog","title":"Read Analog","text":"<p>This block allows you to read the current state of an analog input pin. It has one parameter, a drop-down list containing all the valid Pins. It reports a value between 0 and 1023.</p>"},{"location":"ard_blocks/#read-sonar","title":"Read Sonar","text":"<p>This block allows you to connect an HC-SR04 type device. It has two parameters, both containing a drop-down list of valid PINs. The first parameter allows you to select a trigger pin, and the second an echo pin. It returns the measured distance in centimeters.</p> <p> </p>"},{"location":"arduino/","title":"FirmataExpress Installation Instructions","text":"<p>When s3-extend is installed using pip,  packages called pymata-express and pymata_rh  are automatically installed to support Arduino boards and the RoboHAT MM1,  respectively. These packages are used to control and monitor the two devices.</p> <p>Both pymata-express and pymata_rh require a specialized Firmata sketch, called FirmataExpress, to be installed on your Arduino or RoboHAT MM1.</p> <p>The following steps explain how to install FirmataExpress on your Arduino.</p>"},{"location":"arduino/#step-1-arduino-ide-installation","title":"Step 1: Arduino IDE Installation","text":"<p>If you have not already installed the Arduino IDE on your computer, go to the Arduino download page and select a distribution for your operating system. </p>"},{"location":"arduino/#step-2-install-firmataexpress-into-the-ide","title":"Step 2: Install FirmataExpress Into The IDE","text":"<p>After installation, open the Arduino IDE and select Tools/Manage Libraries. When the Libary Manager appears, enter FirmataExpress in the search box, and click install.</p> <p> </p> <p></p>"},{"location":"arduino/#step-3-install-the-ultrasonic-library-into-the-ide","title":"Step 3: Install The Ultrasonic Library Into The IDE","text":"<p>FirmataExpress also requires that the ultrasonic library by Erick Sim\u00f5es for operation. Once again, using the Arduino Library Manager and search for ultrasonic and find the version by Erick Simoes. Click on the Tools/Manage Libraries and select Ultrasonic and then click Install.** </p>"},{"location":"arduino/#step-4-go-into-the-tools-menus-and-verify-the-board-type-and-port","title":"Step 4: Go Into The Tools Menus and Verify The Board Type and Port","text":""},{"location":"arduino/#step-5-compile-and-upload-firmataexpress-into-the-arduino","title":"Step 5: Compile And Upload FirmataExpress Into The Arduino","text":"<p>Select File/Examples and from the drop-down list, select FirmataExpress.</p> <p> </p> <p>Click on the upload button to compile and upload FirmataExpress to the Arduino. </p>"},{"location":"arduino/#the-arduino-is-now-ready-for-use","title":"The Arduino is now ready for use.","text":""},{"location":"browsers/","title":"A Word About Browser Compatibility","text":""},{"location":"browsers/#supported-and-recommended-browsers","title":"Supported and Recommended Browsers","text":"<p>The recommended browser for the Scratch3 OneGPIO extensions is Google Chrome.</p> <p>Firefox is also supported, but you may need to change a setting, as described in the next section.</p> <p>These are the only browsers supported at this time.</p> <p>SPECIAL NOTE FOR  Raspberry Pi USERS: Chrome no longer supports insecure  Websockets across the network. If you wish to use Chrome in the remote configuration,  you must run the Scratch editor offline. </p>"},{"location":"browsers/#if-you-wish-to-use-firefox","title":"If You Wish To Use Firefox","text":"<p>You may use Firefox, but you will need to configure it to do so.</p> <p>The OneGPIO extensions use a WebSocket connection between the browser and the WebSocket Gateway that is part of each extension server.</p> <p>By default, Firefox does not allow connections to a WebSocket server. To enable Firefox to allow WebSocket connections, open the following URL</p> <pre><code>about:config\n</code></pre> <p>You should see a warning screen similar to that below.</p> <p> </p> <p>Click on the I accept the risk! button.</p> <p>Scroll down until you find the network.websocket.allowInsecureFromHTTPS entry and double click false to change its state to true.</p> <p>Close Firefox and reopen. Scratch 3 OneGPIO should now function properly.</p>"},{"location":"browsers/#trouble-shooting","title":"Trouble Shooting","text":""},{"location":"browsers/#websocket-closed-warning","title":"WebSocket Closed Warning","text":"<p>If this warning pops up, make sure that you have successfully started the Python code, as described in the How To Use The OneGPIO Extensions section of this document and that it is still running.</p> <p>If the warning appears after successfully starting the Python extension, please visit the Troubleshooting section for the extension you are using, and follow the instructions there.</p>"},{"location":"browsers/#reporting-errors","title":"Reporting Errors","text":"<p>If, after loading an extension, it is not behaving as expected, with the browser open, press the F12  key on your keyboard to expose the browser console. If you see any errors reported and are still unsure how to solve the issue, create an issue against the s3-extend distribution pasting any error output into the issue comment.</p>"},{"location":"cpx/","title":"Circuit Playground Express","text":"The FirmataCPx Firmware <p>To monitor and control the Circuit Playground Express, a special version of StandardFirmata, called FirmataCPx, must be installed on the Playground Express.</p>"},{"location":"cpx/#installation","title":"Installation","text":"<p>Since the Circuit Playground Express utilizes a UF2 bootloader, installation is quick and straightforward. To install FirmataCPx onto the Express, first, click on this link to download FirmataCPx.uf2.</p> <p>Next, place the Circuit Playground Express in bootloader mode by plugging the Express into a USB port on your computer and double-clicking the reset button on the Playground Express. All the neo-pixels should light green.</p> <p>Open up a file explorer tool, and you should see a USB drive called CPLAYBOOT. Using the file explorer, drag the FirmataCPx.uf2 file onto the CPLAYBOOT entry.  In a few seconds, FirmataCPx should be loaded on the Playground Express. The red LED should flash several times and then extinguish after a successful load. For more information about loading UF2 files onto the Express, please refer to this Adafruit page. Even though this page addresses MakeCode, the procedure for flashing a .uf2 file is the same in all cases.</p>"},{"location":"cpx_blocks/","title":"The Circuit Playground Express Blocks","text":"<p>The blocks consist of a set of HAT blocks with a bump at the left top, boolean blocks that have pointed ends, reporter blocks that are rounded in shape, and command blocks that are rectangular in shape.</p>"},{"location":"cpx_blocks/#hat-blocks","title":"HAT Blocks","text":"<p>HAT blocks test for a specific condition. When that condition is met for the first time, all of the blocks under the HAT block execute.</p>"},{"location":"cpx_blocks/#when-button-switch-is-pressedreleased","title":"When BUTTON Switch Is Pressed/Released","text":"<p>This block allows you to be notified when either button switch A or B, and the button is either pressed or released.</p>"},{"location":"cpx_blocks/#when-slide-switch-is-moved-leftright","title":"When SLIDE Switch Is Moved Left/Right","text":"<p>This block executes when the slide switch moves to the selected position.</p>"},{"location":"cpx_blocks/#when-cpx-position-is-tilt_position","title":"When CPX Position Is TILT_POSITION","text":"<p>This block executes when the Playground Express tilt position changes to Flat, Up, Down, Left, or Right.</p>"},{"location":"cpx_blocks/#when-a-loud-sound-is-detected","title":"When A Loud Sound Is Detected","text":"<p>This block executes when a relatively loud sound is detected. The sound only needs to be momentary, such as a hand clap.</p>"},{"location":"cpx_blocks/#when-a-touchpad-is-touchedreleased","title":"When A Touchpad Is Touched/Released","text":"<p>This block executes when the selected touchpad is either touched or released.  </p>"},{"location":"cpx_blocks/#boolean-blocks","title":"Boolean Blocks","text":"<p>Boolean blocks test for a specific condition and return either True or False.</p>"},{"location":"cpx_blocks/#button-switch-is-pressedreleased","title":"BUTTON Switch Is Pressed/Released","text":"<p>This block returns TRUE if the selected switch is currently in the selected state. Otherwise, it returns FALSE.</p>"},{"location":"cpx_blocks/#lighttemperature-sensor-value-is-or-specified-value","title":"Light/Temperature Sensor Value is &gt; or &lt; Specified Value","text":"<p>This block compares the current value of the selected sensor, using the selected operator, to the value entered by the user.</p>"},{"location":"cpx_blocks/#tilt-position-of-the-cpx","title":"Tilt Position of The CPX","text":"<p>This block returns TRUE if the CPX is currently in the selected tilt position.</p>"},{"location":"cpx_blocks/#selected-touchpad-is-currently-touchedreleased","title":"Selected Touchpad is Currently Touched/Released","text":"<p>This block returns TRUE if the selected touchpad is currently in the selected state.</p>"},{"location":"cpx_blocks/#reporter-blocks","title":"Reporter Blocks","text":"<p>Reporter blocks retrieve the current value for a selected sensor.</p>"},{"location":"cpx_blocks/#current-lighttemperature-value","title":"Current Light/Temperature Value","text":"<p>This block returns the current value for the selected sensor. The light value is non-calibrated, and the temperature is expressed in degrees Celsius.</p>"},{"location":"cpx_blocks/#command-blocks","title":"Command Blocks","text":"<p>Command blocks control actuators on the CPX.</p>"},{"location":"cpx_blocks/#set-neopixel-to-color","title":"Set Neopixel To Color","text":"<p>This block sets the selected neopixel to the red, green, and blue values entered. To turn a neopixel off, set its r, g, and b values to zero.</p>"},{"location":"cpx_blocks/#play-a-tone","title":"Play A Tone","text":"<p>This block plays a tone at the specified frequency in Hertz for the duration specified in milliseconds.</p>"},{"location":"cpx_blocks/#board-led-onoff","title":"Board LED On/Off","text":"<p>This block controls the state of the red board LED.</p>"},{"location":"delay/","title":"When In Doubt, Add A Small Delay","text":""},{"location":"delay/#adding-a-short-delay-to-loops","title":"Adding A Short Delay To Loops","text":"<p>It is often advisable to add a short delay within a loop to allow other Scratch threads to run without blocking them.</p>"},{"location":"esp-32/","title":"ESP-32 NodeMCU Installation Instructions","text":"<p>The Arduino IDE is used to install the required software onto the  ESP-32. </p>"},{"location":"esp-32/#installing-the-arduino-ide","title":"Installing The Arduino IDE","text":"<p>If you need to install the Arduino IDE on your computer, go to  the Arduino Download page and download and install the IDE for your computer.</p>"},{"location":"esp-32/#configuring-the-boards-manager","title":"Configuring The Boards Manager","text":"<p>The Arduino IDE boards manager must be configured to use the ESP-32 Arduino Core. The procedure is found  on this page.</p>"},{"location":"esp-32/#install-the-telemetrix4esp32-sketch","title":"Install The Telemetrix4ESP32 Sketch","text":"<p>To install the Telemetrix4Esp32 sketch, from the Arduino IDE main menu, open Tools/Manage Libraries...</p> <p>The following screenshot is from version 2 of the Arduino IDE:</p> <p> </p> <p>In the search edit box, enter Telemetrix.</p> <p>Select Telemetrix4Esp32 and press the Install button.</p> <p>After the installation is complete, from the Arduino main menu,  select File/Examples/Telemetrix4Esp32/Telemetrix4Esp32WIFI.  The sketch's source code will appear in the Editor window.</p>"},{"location":"esp-32/#configure-your-network-values-in-the-sketch","title":"Configure Your Network Values In the Sketch","text":"<p>The sketch must be modified to contain your network SSID and password.</p> <p> </p> <p>Replace \"YOUR_NETWORK_SSID\" and \"YOUR_NETWORK_PASSWORD\" with the values for your network. Make sure that double quotes are still in place for both values.</p> <p>Save the sketch.</p>"},{"location":"esp-32/#upload-the-sketch-to-the-esp-32","title":"Upload The Sketch To the ESP-32","text":"<p>To upload the sketch to the NodeMCU, plug a USB cable into the  NodeMCU and your computer, and from the Arduino IDE main menu Tools selection,  choose Board/esp32, and from that menu, select the board you are using. In my case, I am using a DoIt NodeMCU 1.0. Next, select the Com port from the Tools/Port menu of the Arduino IDE.</p> <p>Now, click on the Upload arrow (the horizontal arrow) below the Arduino IDE Main menu. The sketch will take several seconds to compile and load.</p>"},{"location":"esp-32/#determine-the-ip-address-assigned-to-the-esp-32","title":"Determine The IP Address Assigned To The ESP-32","text":"<p>To determine the IP address assigned to the NodeMCU, open the Arduino IDE  Serial Monitor (the button in the upper right of the Arduino IDE), set the speed to  115200, and press the reset button on the NodeMCU. Within 15 seconds,  you should see a message telling you the NodeMCU's IP address.  Write this value down since you will need it later when using the Scratch3 Editor.</p> <p> </p> <p>NOTE: When you reset the NodeMCU, the onboard LED will stay lit until a connection is made with your router. You must wait for the LED to extinguish before starting the s32 script.</p>"},{"location":"esp-8266/","title":"ESP-8266 NodeMCU Installation Instructions","text":"<p>The Arduino IDE is used to install the required software onto the  ESP-8266. </p>"},{"location":"esp-8266/#installing-the-arduino-ide","title":"Installing The Arduino IDE","text":"<p>If you need to install the Arduino IDE on your computer, go to  the Arduino Download page and download and install the IDE for your computer.</p>"},{"location":"esp-8266/#configuring-the-boards-manager","title":"Configuring The Boards Manager","text":"<p>The Arduino IDE boards manager needs to be configured to use the ESP-8266 Arduino Core. The procedure is found  on this page.</p>"},{"location":"esp-8266/#install-the-telemetrix4esp8266-sketch","title":"Install The Telemetrix4ESP8266 Sketch","text":"<p>To install the Telemetrix4ESP8266 sketch, from the Arduino IDE main menu, open Tools/Manage Libraries...</p> <p> </p> <p>In the search edit box, enter Telemetrix.</p> <p>Select Telemetrix4ESP8266 and press the Install button.</p> <p>After the installation is complete, from the Arduino main menu, select  File/Examples/TelemetrixEsp8266/TelemetrixEsp8266. The source code for  the sketch will appear in the Editor window. </p>"},{"location":"esp-8266/#configure-your-network-values-in-the-sketch","title":"Configure Your Network Values In the Sketch","text":"<p>The sketch needs to be modified to contain your network SSID and password.</p> <p> </p> <p>Replace \"YOUR SSID\" and \"YOUR PASSWORD\" with the values for your network. Make sure that double quotes are still in place for both values.</p> <p>Save the sketch.</p>"},{"location":"esp-8266/#upload-the-sketch-to-the-esp-8266","title":"Upload The Sketch To the ESP-8266","text":"<p>To upload the sketch to the NodeMCU, plug a USB cable into the  NodeMCU and your computer, and from the Arduino IDE main menu Tools selection,  choose Board/Esp8266 Boards and from that menu, select the board you are using. In my case, I am using a NodeMCU 1.0. Next, select the Com port from the Tools/Port menu of the Arduino IDE.</p> <p>Now, click on the Upload arrow (the horizontal arrow)  below the Arduino IDE Main menu, and the sketch will take several seconds to compile and load. </p>"},{"location":"esp-8266/#determine-the-ip-address-assigned-to-the-esp-8266","title":"Determine The IP Address Assigned To The ESP-8266","text":"<p>To determine the IP address assigned to the NodeMCU, open the Arduino IDE Serial Monitor (the button in the upper right of the Arduino IDE), set the speed to 115200, press the reset button on the NodeMCU. Within 15 seconds, you should see a message telling you the IP address of the  NodeMCU. Write this value down since you will need it later when using the Scratch3 Editor.</p> <p> </p> <p>NOTE: When you reset the NodeMCU, the onboard LED will stay lit until a connection is made with your router. You must wait for the LED to extinguish before starting the s3e script.</p>"},{"location":"esp_32_blocks/","title":"ESP-32","text":""},{"location":"esp_32_blocks/#the-esp-32-blocks","title":"The ESP-32 Blocks","text":"<p>The blocks consist of a set of command blocks that are rectangular in shape and reporter blocks rounded in shape.</p> <p>NOTE: When you select the ESP-32 OneGPIO extension in the Scratch Editor, a Warning  Dialog  will pop up, reminding you to enter and use the ESP-32 IP address block. </p> <p></p>"},{"location":"esp_32_blocks/#command-blocks","title":"Command Blocks","text":""},{"location":"esp_32_blocks/#esp-32-ip-address","title":"ESP-32 IP Address","text":"<p>You must enter the WiFi IP address of the ESP-32 into this block. This block must precede the other ESP-32 blocks and should only be used once.</p> <p></p>"},{"location":"esp_32_blocks/#write-digital","title":"Write Digital","text":"<p>This block allows you to select a pin and set its output to either a one or zero. It has two parameters. The first is a drop-down list of valid PINs. The second parameter is the output value. It also is a drop-down list and contains the values zero and one.</p>"},{"location":"esp_32_blocks/#write-pwm","title":"Write PWM","text":"<p>This block allows you to select a pin and set its PWM output to be a value between 0 and 100%. It has two parameters. The first is a drop-down list of valid PINs. The second parameter allows you to fill in a PWM value. If you use a PWM value of less than zero, it will be set to 0 internally. If you set the value to greater than 100, it will be set to 100.</p>"},{"location":"esp_32_blocks/#write-servo","title":"Write Servo","text":"<p>This block allows you to control the angle of a servo motor. It contains two parameters. The first is a drop-down list of valid PINs. The second specifies the angle in degrees. The value is limited to be between 0 and 180.</p>"},{"location":"esp_32_blocks/#reporter-blocks","title":"Reporter Blocks","text":""},{"location":"esp_32_blocks/#read-digital","title":"Read Digital","text":"<p>This block allows you to read the current state of a digital input pin. It has one parameter, a drop-down list containing all the valid PINs. It reports a value of zero or one.</p>"},{"location":"esp_32_blocks/#read-analog","title":"Read Analog","text":"<p>This block allows you to read the current state of an analog input pin. It has one parameter, a drop-down list containing all the valid Pins. It reports a value between 0 and 100.</p>"},{"location":"esp_32_blocks/#read-sonar","title":"Read Sonar","text":"<p>This block allows you to connect an HC-SR04 type device. It has two parameters, both containing a drop-down list of valid PINs. The first parameter allows you to select a trigger pin, and the second an echo pin. It returns the measured distance in centimeters.</p>"},{"location":"esp_blocks/","title":"ESP-8266","text":""},{"location":"esp_blocks/#the-esp-8266-blocks","title":"The ESP-8266 Blocks","text":"<p>The blocks consist of a set of command blocks that are rectangular in shape and reporter blocks rounded in shape.</p> <p>NOTE: When you select the ESP-8266 OneGPIO extension in the Scratch Editor, a Warning  Dialog  will pop up, reminding you to enter and use the ESP-8266 IP address block. </p> <p></p>"},{"location":"esp_blocks/#command-blocks","title":"Command Blocks","text":""},{"location":"esp_blocks/#esp-8266-ip-address","title":"ESP-8266 IP Address","text":"<p>You must enter the WiFi IP address of the ESP-8266 into this block. This block must precede the other ESP-8266 blocks and should only be used once.</p> <p></p> <p>When Scratch executes this block, the red LED on the ESP-8266 should turn off, indicating a successful connection.</p>"},{"location":"esp_blocks/#write-digital","title":"Write Digital","text":"<p>This block allows you to select a pin and set its output to either a one or zero. It has two parameters. The first is a drop-down list of valid PINs. The second parameter is the output value. It also is a drop-down list and contains the values zero and one.</p>"},{"location":"esp_blocks/#write-pwm","title":"Write PWM","text":"<p>This block allows you to select a pin and set its PWM output to be a value between 0 and 100%. It has two parameters. The first is a drop-down list of valid PINs. The second parameter allows you to fill in a PWM value. If you use a PWM value of less than zero, it will be set to 0 internally. If you set the value to greater than 100, it will be set to 100.</p>"},{"location":"esp_blocks/#write-servo","title":"Write Servo","text":"<p>This block allows you to control the angle of a servo motor. It contains two parameters. The first is a drop-down list of valid PINs. The second specifies the angle in degrees. The value is limited to be between 0 and 180.</p>"},{"location":"esp_blocks/#reporter-blocks","title":"Reporter Blocks","text":""},{"location":"esp_blocks/#read-digital","title":"Read Digital","text":"<p>This block allows you to read the current state of a digital input pin. It has one parameter, a drop-down list containing all the valid PINs. It reports a value of zero or one.</p>"},{"location":"esp_blocks/#read-analog","title":"Read Analog","text":"<p>This block allows you to read the current state of an analog input pin. It has one parameter, a drop-down list containing all the valid Pins. It reports a value between 0 and 100.</p>"},{"location":"esp_blocks/#read-sonar","title":"Read Sonar","text":"<p>This block allows you to connect an HC-SR04 type device. It has two parameters, both containing a drop-down list of valid PINs. The first parameter allows you to select a trigger pin, and the second an echo pin. It returns the measured distance in centimeters.</p>"},{"location":"ext_ard/","title":"Arduino","text":""},{"location":"ext_ard/#starting-the-onegpio-server-for-arduino","title":"Starting The OneGPIO Server For Arduino","text":"<p>With power applied to your Arduino, press and release the Arduino's reset button. </p> <p>Next, open a terminal window and type:</p> <pre><code>s3a\n</code></pre> <p> </p> <p>This command automatically starts the Python Banyan Backplane and both the Banyan WebSocket and Banyan Arduino Gateways. It starts an automatic 5-second countdown timer to allow the Arduino adequate time to reset itself and start the  Firmata-Express sketch.</p> <p>To learn more about the Backplane and Gateways, visit \"A Peek Under The Hood\"  for more information.</p> <p>After the countdown time completes, the terminal window indicates that the Arduino is initialized. You may now start Scratch 3 in your Web browser, as explained in the \"Launching Scratch 3\" section of this document.</p> <p> </p>"},{"location":"ext_ard/#manually-specifying-the-com-port","title":"Manually Specifying The COM Port","text":"<p>The Arduino Gateway will automatically discover the COM port that the Arduino Gateway is using. </p> <p>If you wish to manually specify the COM port, use the -c command-line option when starting s3a.</p> <p>For example, if you are using Windows and the COM port you wish to use is COM6 then, start s3a with the following command:</p> <pre><code>s3a -c COM6\n</code></pre> <p>For Linux or macOS, use the COM port designator specific to your operating system.  For example, if the COM port is /dev/ttyACM0, then start s3a with the following command:</p> <pre><code>s3a -c /dev/ttyACM0\n</code></pre>"},{"location":"ext_ard/#manually-specifying-an-arduino-instance","title":"Manually Specifying An Arduino Instance","text":"<p>If you have multiple Arduino's plugged into your computer, you can explicitly tell s3a which one to use by taking advantage of the  pymata-express Arduino Instance Id Feature,</p> <p>You may do so using the -i command-line option:</p> <pre><code>s3a -i 2\n</code></pre>"},{"location":"ext_ard/#troubleshooting","title":"Troubleshooting","text":"<p>Only use a high-quality USB cable. Verify that you properly connected the cable to both your computer and the Arduino.  If s3a detects an error in either the backplane or the two gateways, it will shut itself down. </p> <p>To troubleshoot why this may be happening, open a new terminal window and type:</p> <pre><code>backplane\n</code></pre> <p>You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown.</p> <p></p> <p>Next, open an additional terminal window and type:</p> <pre><code>ardgw\n</code></pre> <p></p> <p>You should see a window similar to the one shown above.</p> <p>If you do not, make sure that you've flashed the Arduino with the FirmataExpress sketch, as explained in the \"Preparing Your Micro-Controller\" section of this document.</p> <p>Also, make sure that you've plugged the Arduino into a USB port before starting s3a.</p> <p>Next, open a third terminal window and type:</p> <pre><code>wsgw\n</code></pre> <p></p> <p>You should see a window similar to the one shown above.</p> <p>If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment.</p>"},{"location":"ext_cpx/","title":"Circuit Playground Express","text":""},{"location":"ext_cpx/#starting-the-onegpio-server-for-the-circuit-playground-express","title":"Starting The OneGPIO Server For The Circuit Playground Express","text":"<p>Plug the Circuit Playground Express into a USB connector on your computer</p> <p>Next, open a terminal window and type:</p> <pre><code>s3c\n</code></pre> <p> </p> <p>This command automatically starts the Python Banyan Backplane and both the Banyan WebSocket and Banyan Circuit Playground Express Gateways.</p> <p>If you remove the USB cable after starting s3c, or if you have forgotten to plug in the cable before starting s3c, you will see something similar to the following:</p> <p> </p> <p>Here, s3c tried to start the Circuit Playground Express Gateway but detected an error and aborted it.</p> <p>Visit \"A Peek Under The Hood\" for more information about the Backplane and Gateways.</p>"},{"location":"ext_cpx/#troubleshooting","title":"Troubleshooting","text":"<p>Only use a high-quality USB cable. Verify that you properly connected the cable to both your computer and the Circuit Playground express. If s3c detects an error in either the backplane or either of the two gateways, it will shut itself down.</p> <p>To troubleshoot why this may be happening, open a new terminal window and type:</p> <pre><code>backplane\n</code></pre> <p>You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown.</p> <p></p> <p>Next, open an additional terminal window and type:</p> <pre><code>cpxgw\n</code></pre> <p></p> <p>You should see a window similar to the one shown above. Here, the screenshot displays the version of pymata-cpx and the release date of FirmataCPx.</p> <p>Next, open a third terminal window and type:</p> <pre><code>wsgw -i 9003\n</code></pre> <p></p> <p>You should see a window similar to the one shown above.</p> <p>If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment.</p>"},{"location":"ext_esp/","title":"ESP-8266","text":""},{"location":"ext_esp/#starting-the-onegpio-server-for-the-esp-8266","title":"Starting The OneGPIO Server For The ESP-8266","text":"<p>Apply power to the ESP-8266. The red LED should blink a few times and then stay continually on. </p> <p>Next, open a terminal window and type:</p> <pre><code>s3e\n</code></pre> <p> </p> <p>This command automatically starts the Python Banyan Backplane and both the Banyan WebSocket and Banyan ESP-8266 Gateways. </p> <p>You may now start Scratch 3 in your Web browser, as explained in the \"Launching Scratch 3\" section of this document.</p>"},{"location":"ext_esp/#troubleshooting","title":"Troubleshooting","text":"<p>If the command window does not look similar to the one above,  open a new terminal and type:</p> <pre><code>backplane\n</code></pre> <p>You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown.</p> <p></p> <p>Next, open an additional terminal window and type:</p> <pre><code>espgw\n</code></pre> <p></p> <p>You should see a window similar to the one shown above for the ESP-8266 Gateway when the s3e command succeeds.</p> <p>If you do not, make sure that you've installed MicroPython on the ESP-8266 and flashed it with main.py and esp8266_min.py as explained in the \"Preparing Your Micro-Controller\" section of this document.</p> <p>Next, open a third terminal window and type:</p> <pre><code>wsgw -i 9002\n</code></pre> <p></p> <p>You should see a window similar to the one shown above for the WebSocket Gateway when the s3e command succeeds. </p> <p>If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment.</p>"},{"location":"ext_esp32/","title":"ESP-32","text":""},{"location":"ext_esp32/#starting-the-onegpio-server-for-the-esp-32","title":"Starting The OneGPIO Server For The ESP-32","text":"<p>Apply power to the ESP-32.</p> <p>Note: For the following discussion, s3-extend was installed in a virtual  environment, and the screenshots below  reflect this.</p> <p>Next, open a terminal window and type:</p> <pre><code>s32\n</code></pre> <p> </p> <p>This command automatically starts the Python Banyan Backplane,  the Banyan WebSocket Gateway, and the Banyan ESP-32 Gateway. </p> <p>You may now start Scratch 3 in your Web browser, as explained in this  document's \"Launching Scratch 3\" section.</p>"},{"location":"ext_esp32/#troubleshooting","title":"Troubleshooting","text":"<p>If the command window does not look similar to the one above,  open a new terminal and type:</p> <pre><code>backplane\n</code></pre> <p>A similar output, as shown below, indicates that the backplane is running correctly.  The IP address does not need to match the one shown. The IP address does not need to match the one shown.</p> <p></p> <p>Next, open an additional terminal window and type:</p> <pre><code>espgw\n</code></pre> <p></p> <p>You should see a window similar to the one shown above for the ESP-32 Gateway when the s3e command succeeds.</p> <p>Next, open a third terminal window and type:</p> <pre><code>wsgw -i 9007\n</code></pre> <p></p> <p>You should see a window similar to the one shown above for the WebSocket Gateway when the wsgw command succeeds. </p> <p>If there are exceptions or errors in any terminal window, create an issue against the s3-extend distribution, pasting any error output into the issue comment.</p>"},{"location":"ext_pico/","title":"Picoboard","text":""},{"location":"ext_pico/#starting-the-onegpio-server-for-the-picoboard","title":"Starting The OneGPIO Server For The Picoboard","text":"<p>Plug the Picoboard into a USB connector on your computer</p> <p>Next, open a terminal window and type:</p> <pre><code>s3p\n</code></pre> <p> </p> <p>This command automatically starts the Python Banyan Backplane and both the Banyan WebSocket and Banyan Picoboard Gateways.</p> <p>If you remove the USB cable after starting s3p, or if you have forgotten to plug in the cable before starting s3p, you will see something similar to  the following:</p> <p> </p> <p>Here, s3p detected that the Picoboard Gateway was not running, and therefore shut down all its processes.</p> <p>Visit \"A Peek Under The Hood\" for more information about the Backplane and Gateways.</p>"},{"location":"ext_pico/#troubleshooting","title":"Troubleshooting","text":"<p>Only use a high-quality USB cable. Verify that you properly connected the cable to both your computer and the Picoboard.  If s3p detects an error in either the backplane or either of the two gateways, it will shut itself down. </p> <p>To troubleshoot why this may be happening, open a new terminal window and type:</p> <pre><code>backplane\n</code></pre> <p>You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown.</p> <p></p> <p>Next, open an additional terminal window and type:</p> <pre><code>pbgw\n</code></pre> <p></p> <p>You should see a window similar to the one shown above. Here, the screenshot indicates that there are two active COM ports. The Picoboard Gateway checks all of the active COM ports until it finds a connected Picoboard.</p> <p>Next, open a third terminal window and type:</p> <pre><code>wsgw -i 9004\n</code></pre> <p></p> <p>You should see a window similar to the one shown above.</p> <p>If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment.</p>"},{"location":"ext_pupper/","title":"Ext pupper","text":""},{"location":"ext_pupper/#starting-the-onegpio-server-for-the-pupper-robot","title":"Starting The OneGPIO Server For The Pupper Robot","text":"<p>Power up the Robot.</p> <p>Next, open a terminal window and type:</p> <pre><code>s3pup\n</code></pre> <p> </p> <p>This command automatically starts the Python Banyan Backplane and both the Banyan WebSocket and the Pupper Robot gateway.</p> <p>Visit \"A Peek Under The Hood\" for more information about the Backplane and Gateways.</p>"},{"location":"ext_pupper/#troubleshooting","title":"Troubleshooting","text":"<p>If s3pup detects an error in either the backplane or either of the two gateways, it will  shut itself down.</p> <p>To troubleshoot why this may be happening, open a new terminal window and type:</p> <pre><code>backplane\n</code></pre> <p>You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown.</p> <p></p> <p>Next, open an additional terminal window and type:</p> <pre><code>pupgw\n</code></pre> <p></p> <p>You should see a window similar to the one shown above. Here, the screenshot displays the version of the Pupper gateway.</p> <p>Next, open a third terminal window and type:</p> <pre><code>wsgw -i 9007\n</code></pre> <p></p> <p>You should see a window similar to the one shown above.</p> <p>If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment.</p>"},{"location":"ext_rh/","title":"RoboHAT MMI","text":""},{"location":"ext_rh/#starting-the-onegpio-server-for-robohat-mm1","title":"Starting The OneGPIO Server For RoboHAT MM1","text":"<p>Power the  RoboHAT and then press and release the RoboHAT's reset button. </p> <p>Next, open a terminal window and type:</p> <pre><code>s3rh\n</code></pre> <p> </p> <p>This command automatically starts the Python Banyan Backplane and both the Banyan WebSocket and Banyan RoboHAT Gateways. It starts an automatic 5-second countdown timer to allow the RoboHAT adequate time to reset itself and start the  Firmata-Express sketch.</p> <p>To learn more about the Backplane and Gateways, visit \"A Peek Under The Hood\"  for more information.</p> <p>After the countdown time completes, the terminal window indicates that the RoboHAT is initialized. You may now start Scratch 3 in your Web browser, as explained in the \"Launching Scratch 3\" section of this document.</p> <p> </p>"},{"location":"ext_rh/#manually-specifying-the-com-port","title":"Manually Specifying The COM Port","text":"<p>The RoboHAT Gateway will automatically discover the COM port that the RoboHAT Gateway is using. </p> <p>If you wish to manually specify the COM port, use the -c command-line option when starting s3rh.</p> <p>For example, if you are using Windows and the COM port you wish to use is COM6, start s3rh with the following command:</p> <pre><code>s3rh -c COM6\n</code></pre> <p>For Linux or macOS, use the COM port designator specific to your operating system.  For example, if the COM port is /dev/ttyACM0, start s3rh with the following command:</p> <pre><code>s3rh -c /dev/ttyACM0\n</code></pre>"},{"location":"ext_rh/#manually-specifying-an-robohat-instance","title":"Manually Specifying An RoboHAT Instance","text":"<p>If you are using one or more Arduino's while using the RoboHAT, you can explicitly tell s3rh which one to use by taking advantage of the  FirmataExpress Arduino Instance Id Feature,</p> <p>You may do so using the -i command-line option:</p> <pre><code>s3rh -i 2\n</code></pre>"},{"location":"ext_rh/#troubleshooting","title":"Troubleshooting","text":"<p>Only use a high-quality USB cable. Verify that you correctly connected the cable to both your computer and the RoboHAT.  If s3rh detects an error in either the backplane or the two gateways, it will shut itself down. </p> <p>To troubleshoot why this may be happening, open a new terminal window and type:</p> <pre><code>backplane\n</code></pre> <p>You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown.</p> <p></p> <p>Next, open an additional terminal window and type:</p> <pre><code>rhgw\n</code></pre> <p></p> <p>You should see a window similar to the one shown above.</p> <p>If you do not, make sure that you've flashed the RoboHAT with the FirmataExpress sketch, as explained in the \"Preparing Your Micro-Controller\" section of this document.</p> <p>Also, make sure that you've plugged the RoboHAT into a USB port before starting s3rh.</p> <p>Next, open a third terminal window and type:</p> <pre><code>wsgw -i 9005\n</code></pre> <p></p> <p>You should see a window similar to the one shown above.</p> <p>If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment.</p>"},{"location":"ext_rpi/","title":"Raspberry Pi","text":""},{"location":"ext_rpi/#starting-the-onegpio-server-for-raspberry-pi","title":"Starting The OneGPIO Server For Raspberry Pi","text":"<p>Apply power to the Raspberry Pi. </p> <p>Next, after logging in, open a terminal window and type:</p> <pre><code>s3r\n</code></pre> <p></p> <p></p> <p>This command automatically starts the Python Banyan Backplane and both the Banyan WebSocket and Banyan Raspberry Pi Gateways. </p> <p>IMPORTANT NOTE: The s3r command is intended to run exclusively on a Raspberry Pi.</p> <p>Visit \"A Peek Under The Hood\" for more information about the Backplane and Gateways.</p> <p>You may now start Scratch 3 in your Web browser, as explained in the \"Launching Scratch 3\" section of this document.</p>"},{"location":"ext_rpi/#troubleshooting","title":"Troubleshooting","text":"<p>If the command window does not look similar to the one above,  open a new terminal and type:</p> <pre><code>backplane\n</code></pre> <p>You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown.</p> <p></p> <p>Next, open an additional terminal window and type:</p> <pre><code>rpigw\n</code></pre> <p></p> <p>You should see a window similar to the one shown above for the ESP-8266 Gateway when the s3e command succeeds.</p> <p>If you do not, make sure that you've installed MicroPython on the ESP-8266 and flashed it with main.py and esp8266_min.py as explained in the \"Preparing Your Micro-Controller\" section of this document.</p> <p>Next, open a third terminal window and type:</p> <pre><code>wsgw -i 9001\n</code></pre> <p></p> <p>You should see a window similar to the one shown above for the WebSocket Gateway when the s3e command succeeds. </p> <p>If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment.</p>"},{"location":"ext_rpi_pico/","title":"Raspberry Pi Pico","text":""},{"location":"ext_rpi_pico/#starting-the-onegpio-server-for-the-raspberry-pi-pico","title":"Starting The OneGPIO Server For The Raspberry Pi Pico","text":"<p>Make sure that you have the  server application installed  on your Pico.</p> <p>Plug your USB cable to power up the board. You should see the green LED flash twice. If not, check your cable and the connection.</p> <p>Next, open a terminal window and type:</p> <pre><code>s3rp\n</code></pre> <p> </p> <p>This command automatically starts the Python Banyan Backplane and the Banyan WebSocket, and Banyan Raspberry Pi Pico Gateways.</p> <p>If you remove the USB cable after starting s3rp, or if you have forgotten to plug in the cable before starting s3rp, you will see something similar to the following:</p> <p> </p> <p>Here, s3rp tried to start the Raspberry Pi Pico Gateway but detected an error and aborted.</p> <p>Visit \"A Peek Under The Hood\" for more information about the Backplane and Gateways.</p>"},{"location":"ext_rpi_pico/#troubleshooting","title":"Troubleshooting","text":"<p>Only use a high-quality USB cable. Verify that you properly connected the cable to both your computer and the Raspberry Pi Pico. If s3rp detects an error in either the backplane or either of the two gateways, it will shut itself down.</p> <p>To troubleshoot why this may be happening, open a new terminal window and type:</p> <pre><code>backplane\n</code></pre> <p>You should see a similar output, as shown below, indicating that the backplane is running correctly. The IP address does not need to match the one shown.</p> <p></p> <p>Next, open an additional terminal window and type:</p> <pre><code>rpgw\n</code></pre> <p></p> <p>You should see a window similar to the one shown above. Here, the screenshot displays the version of tmx-pico-aio library, shown as TelemetrixRpiPicoAio, the serial port selected, the Pico's unique ID, the version number of the server firmware, shown as Telemetrix4RPiPico, and the standard Python Banyan header.</p> <p>Next, open a third terminal window and type:</p> <pre><code>wsgw -i 9006\n</code></pre> <p></p> <p>You should see a window similar to the one shown above.</p> <p>If there are exceptions or errors in any of the terminal windows, create an issue against the s3-extend distribution pasting any error output into the issue comment.</p>"},{"location":"issues/","title":"Reporting Issues","text":""},{"location":"issues/#issues-with-the-scratch-3-onegpio-editor","title":"Issues With The Scratch 3 OneGPIO Editor","text":"<p>If you are having problems with the editor in the browser, you may file an issue here.</p> <p>Include a description of what you were doing that caused the error and output from the browser console. Press F12 while in the browser to get to the console. </p> <p>Please also include a .sb3 file for your Scratch project or a screenshot of the blocks in the Scatch script.</p>"},{"location":"issues/#issues-with-any-of-the-onegpio-extension-servers","title":"Issues With Any Of The OneGPIO Extension Servers","text":"<p>If you are having problems with any of the extension servers, you may file an issue here.</p> <p>Include a description of what you were doing that caused the error and output from the browser console. Press F12 while in the browser to get to the console. </p> <p>Please also include a .sb3 file for your Scratch project or a screenshot of the blocks in the Scatch script.</p>"},{"location":"issues/#issues-with-this-document","title":"Issues With This Document","text":"<p>If you find anything that needs to be corrected  or wish to request that additional information be added to it, please file an issue here.</p>"},{"location":"issues/#contacting-me-via-email","title":"Contacting Me Via Email","text":"<p>Please feel free to email me at: MisterYsLab@gmail.com</p>"},{"location":"multi/","title":"Running Multiple OneGPIO Extensions Simultaneously","text":""},{"location":"multi/#controlling-or-monitoring-one-board-with-another","title":"Controlling Or Monitoring One Board With Another","text":"<p>As the screenshot above shows, it is possible to run multiple OneGPIO extensions at the same time and have the boards interact with each other.</p> <p>This Scratch script will control the LEDs connected to an ESP-8266 and Raspberry Pi by monitoring the state of a switch on an Arduino.</p> <p>This script was run in a browser on a PC in offline mode, allowing the Raspberry Pi to be controlled remotely.</p> <p>NOTE: You may run a single micro-controller or all simultaneously on a single computer, but only a single instance of a microcontroller may be run at a time. For example, you may run a Raspberry Pi and an Arduino simultaneously and use one to control the other. However, you may not run two of the same type of controller at the same.</p> <p>Running two boards that use a serial link is an advanced and experimental feature and not recommended nor officially supported. An example would be running an Arduino and a Picoboard on the same computer at the same time. If you wish to run two boards that use a serial link, you may have to specify the COM port for one of the boards manually. This is done by using the -c option in the launcher. For example, to start the Picoboard extension forcing it to use COM7, you would start the launcher with:</p> <pre><code> s3p -c com7\n</code></pre>"},{"location":"pico/","title":"No Additional Files Are Required For The Picoboard","text":"<p>Make sure that you have installed s3-extend on your computer, as explained in the Preparing Your Computer section of this document.</p> <p>You may skip to the next section.</p>"},{"location":"pico_blocks/","title":"Picoboard","text":""},{"location":"pico_blocks/#the-picoboard-blocks","title":"The Picoboard Blocks","text":"<p>The blocks consist of a set of HAT blocks with a bump at the left top,  boolean blocks that have pointed ends, and reporter blocks rounded in shape.</p> <p></p> <p>And the blocks translated to Taiwanese.</p> <p></p>"},{"location":"pico_blocks/#hat-blocks","title":"HAT Blocks","text":"<p>HAT blocks test for a specific condition. When that condition is met for the first time, all of the blocks under the HAT block execute.</p>"},{"location":"pico_blocks/#when-the-selected-sensor-is-less-or-greater-than-a-value","title":"When The Selected SENSOR Is Less Or Greater Than A Value","text":"<p>This block allows you to select a sensor type, a comparison type, and a value for the comparison.</p> <p>For example, When Light &gt; 15.</p> <p>If the result of the comparison is TRUE, then all of the blocks below this block are executed once.</p>"},{"location":"pico_blocks/#when-button-is-pressed","title":"When Button Is Pressed","text":"<p>When the Picoboard button is pressed, all of the blocks below this block are executed once.</p>"},{"location":"pico_blocks/#when-the-selected-sensor-value-is-within-a-range","title":"When The Selected SENSOR Value Is Within A Range","text":"<p>This block uses the current value of the selected sensor to check if its value is within the specified range. If it is, then all of the blocks below this block are executed once.</p>"},{"location":"pico_blocks/#boolean-blocks","title":"Boolean Blocks","text":"<p>Boolean blocks test for a specific condition and return either True or False.</p>"},{"location":"pico_blocks/#is-button-pressed","title":"Is Button Pressed","text":"<p>When the button is pressed, this block returns True. If the button is not pressed, it returns FALSE.</p>"},{"location":"pico_blocks/#is-sensor-less-or-greater-than-a-value","title":"Is SENSOR Less Or Greater Than A Value","text":"<p>This block allows you to select a sensor type, a comparison type, and a value for the comparison. It returns TRUE when the comparison is true and FALSE when the comparison is false.</p>"},{"location":"pico_blocks/#reporter-blocks","title":"Reporter Blocks","text":"<p>Reporter blocks retrieve the current value for a selected sensor.</p>"},{"location":"pico_blocks/#sensor-current-value","title":"SENSOR Current Value","text":"<p>This block reports the current value of the selected sensor.</p>"},{"location":"pico_blocks/#convert-sensor-to-a-specified-range","title":"Convert SENSOR To A Specified Range","text":"<p>This block scales the current value for the selected sensor and to be within the specified range. For example, if the Slider is set to 100 and the range is set to -240 to 240, this block will return 240. If the Slider is set to 50, this block will return 0, and if the Slider is set to 0, this block will return -240.</p> <p> </p> <p>Copyright (C) 2019-2023 Alan Yorinks All Rights Reserved</p>"},{"location":"pip_update/","title":"Verifying/Install pip3","text":""},{"location":"pip_update/#what-is-pip","title":"What Is pip?","text":"<p>Python packages are available for download from the Python Package Index (aka pypi). The installation program used to interact with pypi is named pip.</p> <p>The pip utility is often installed alongside Python, but this is not always the case.</p> <p>If you are a Windows user or using Raspberry PI OS on the Raspberry Pi,  pip should be available to you without any additional installation steps.  However, you will need to make sure that you are using the latest version.  Verifying the pip version and instructions on updating pip are explained a little further down on this page.</p>"},{"location":"pip_update/#determining-if-pip-is-installed-on-your-system","title":"Determining If Pip Is Installed On Your System","text":"<p>To determine if pip is installed on your system,  open a command or terminal window, and for Windows, type:</p> <pre><code>pip --version\n</code></pre> <p>For Linux or macOS, type:</p> <pre><code>pip3 --version\n</code></pre> <p>If a version is reported, you can skip down to the section on verifying if you have the latest version and how to update it if you do not. Otherwise, please continue reading.</p>"},{"location":"pip_update/#installing-pip3-for-ubuntu-1910-and-later","title":"Installing pip3 For Ubuntu 19.10 And Later","text":"<p>Make sure your package list is up to date. </p> <p>Open a terminal and enter:</p> <pre><code>sudo apt update\n</code></pre> <p>Next, install pip3 by entering the following command in your terminal:</p> <pre><code>sudo apt install python3-pip\n</code></pre>"},{"location":"pip_update/#installing-pip3-for-mac","title":"Installing pip3 For Mac","text":"<p>Refer to this article for instructions.</p>"},{"location":"pip_update/#verifying-the-pip3-version","title":"Verifying The pip3 Version","text":"<p>To properly install the s3-extend package, the latest version of pip must be used. At the time of this writing, that version is 20.2.2.</p> <p>To check the version of pip or pip3 installed on your computer, open a command or terminal window, and type the following:</p>"},{"location":"pip_update/#windows","title":"Windows","text":"<pre><code>pip --version\n</code></pre>"},{"location":"pip_update/#mac-and-linux-including-raspberry-pi","title":"Mac and Linux (Including Raspberry Pi)","text":"<pre><code>pip3 --version\n</code></pre>"},{"location":"pip_update/#updating-pip3","title":"Updating pip3","text":"<p>If your pip version is earlier than 20.2.2, you should update it to the latest version. To do so, open a command or terminal window and type the following:</p>"},{"location":"pip_update/#windows_1","title":"Windows","text":"<pre><code>python -m pip install --upgrade pip\n</code></pre>"},{"location":"pip_update/#mac-and-linux-including-raspberry-pi_1","title":"Mac and Linux (Including Raspberry Pi)","text":"<pre><code>pip3 install --upgrade pip\n</code></pre>"},{"location":"pupper/","title":"No Additional Files Are Required For The Pupper Robot","text":"<p>Make sure that you have installed s3-extend on your computer, as explained in the Preparing Your Computer section of this document.</p> <p>You may skip to the next section.</p>"},{"location":"pupper_blocks/","title":"Pupper blocks","text":""},{"location":"pupper_blocks/#the-pupper-robot-blocks","title":"The Pupper Robot Blocks","text":""},{"location":"pupper_blocks/#pupper-ip-address","title":"Pupper IP Address","text":"<p>You must specify the Pupper Robot's IP address using this block.</p> <p>NOTE: This must be the first block of your Scratch script. It should only be called once.</p> <p></p>"},{"location":"pupper_blocks/#activate-block","title":"Activate Block","text":"<p>This block activates or deactivates the robot.</p> <p></p> <p>All the remaining blocks control the robot's movement.</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"python_3_7_install/","title":"Python 3 7 install","text":""},{"location":"python_3_7_install/#python-37-or-newer-verification","title":"Python 3.7 (or newer) Verification","text":"<p>The Scratch 3 OneGPIO extension servers utilize the latest advances in the Python 3 asyncio library. Python 3.7 or later is required to run the servers.</p> <p>To check if you have Python 3.7 (or newer) installed open a command window and type:</p> <pre><code>python3 -V\n</code></pre> <p>For Windows, you may need to type:</p> <pre><code>python -V\n</code></pre> <p>The Python version will be displayed:</p> <pre><code>python3\nPython 3.7.2 (default, Dec 31 2018, 14:25:33)\n[GCC 8.2.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt;\n</code></pre> <p>For Windows users, this may look something like:</p> <pre><code>\nC:\\Users\\Alan&gt;python\nPython 3.7.2 (tags/v3.7.2:9a3ffc0492, Dec 23 2018, 23:09:28) [MSC v.1916 64 bit (AMD64)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt;\n</code></pre>"},{"location":"python_3_7_install/#installing-the-latest-version-of-python-3","title":"Installing The Latest Version of Python 3","text":"<p>Always install the newest stable release of Python 3.</p>"},{"location":"python_3_7_install/#windows-users","title":"Windows Users","text":"<p>To install Python 3.7 (or newer), go to the Python home page, and download the latest 3.7 (or later) distribution for your operating system.</p> <p>If you have Python 2.7 installed, you do not need to remove it.</p> <p>During the installation process, if there is a checkbox to add Python 3.7 to your path,  make sure it is checked.</p> <p></p>"},{"location":"python_3_7_install/#mac-users","title":"Mac Users","text":"<p>Go to the python.org download page for Mac and download and install the latest version of Python 3.</p>"},{"location":"python_3_7_install/#raspberry-pi-users","title":"Raspberry Pi Users","text":"<p>As of the 2019-09-26 release of Raspbian Buster with desktop and recommended software comes with Python 3.7 pre-installed. If you are using an older version of Raspbian, it is easiest to flash the latest version of Rasbian on to an SD card and start anew.</p>"},{"location":"python_3_7_install/#linux-users","title":"Linux Users","text":"<p>If Python 3.7 is not included with your distribution, you may install it and have it coexist with the supplied version, using the pyenv utility.</p>"},{"location":"python_3_8_install/","title":"Verify/Install Python 3.8","text":""},{"location":"python_3_8_install/#python-38-or-newer-verification","title":"Python 3.8 (or newer) Verification","text":"<p>The Scratch 3 OneGPIO extension servers utilize the latest advances in the Python 3 asyncio library. Python 3.8 or later is required to run the servers.</p> <p>To check if you have Python 3.8 (or newer) installed, open a command window and type:</p> <pre><code>python3 -V\n</code></pre> <p>For Windows, you may need to type:</p> <pre><code>python -V\n</code></pre> <p>The Python version is displayed in the command window.</p>"},{"location":"python_3_8_install/#installing-the-latest-version-of-python-3","title":"Installing The Latest Version of Python 3","text":"<p>Always install the newest stable release of Python 3.</p>"},{"location":"python_3_8_install/#windows-users","title":"Windows Users","text":"<p>To install Python 3.8 (or newer), go to the Python home page, and download the latest 3.8 (or later) distribution for your operating system.</p> <p>If you have Python 2.7 installed, you do not need to remove it.</p> <p>If there is a checkbox to add Python 3.8 to your path during the installation  process, make sure it is checked.</p> <p>![]./images/windows_python_install.png)</p>"},{"location":"python_3_8_install/#mac-users","title":"Mac Users","text":"<p>Go to the python.org download page for Mac and download and install the latest version of Python 3.</p>"},{"location":"python_3_8_install/#linux-users","title":"Linux Users","text":"<p>If Python 3.8 is not included with your distribution, you may install it and have it coexist with the supplied version using the pyenv utility.</p>"},{"location":"robohat_blocks/","title":"RoboHAT MM1","text":""},{"location":"robohat_blocks/#the-robohat-mm1-blocks","title":"The RoboHAT MM1 Blocks","text":"<p>The blocks consist of a set of command blocks that are rectangular in shape and reporter blocks rounded in shape.</p>"},{"location":"robohat_blocks/#connecting-to-a-local-browser-versus-a-remote-browser","title":"Connecting To A Local Browser Versus A Remote Browser","text":"<p>For the RoboHAT extension, you can run Scratch 3 on a local browser or a browser on your PC.</p> <p>For remote operation, in the Remote IP Address block, you must specify the IP address of the  computer running s3rh.</p> <p>NOTE: It is recommended that if you wish to access a RoboHAT using a remote browser that you install and use the offline version of the Scratch 3 OneGPIO editor. The reason is, using an online version  will most likely result in a security error.</p>"},{"location":"robohat_blocks/#command-blocks","title":"Command Blocks","text":""},{"location":"robohat_blocks/#remote-ip-address","title":"Remote IP Address","text":"<p>If you wish to control the Raspberry Pi from a browser running on your PC, enter the  Raspberry Pi's IP address into this block. This block should be executed before any of the other Raspberry Pi blocks and executed only once.</p> <p>If you wish to use a local browser running on the Raspberry Pi, do not use the Remote IP block.</p>"},{"location":"robohat_blocks/#write-digital","title":"Write Digital","text":"<p>This block allows you to select a pin and set its output to either a one or zero. It has two parameters. The first is a drop-down list of valid PINs. The second parameter is the output value. It also is a drop-down list and contains the values zero and one.</p>"},{"location":"robohat_blocks/#write-pwm","title":"Write PWM","text":"<p>This block allows you to select a pin and set its PWM output to be a value between 0 and 100%. It has two parameters. The first is a drop-down list of valid PINs. The second parameter allows you to fill in a PWM value. If you use a PWM value of less than zero, it will be set to 0 internally. If you set the value to greater than 100, it will be set to 100.</p>"},{"location":"robohat_blocks/#write-servo","title":"Write Servo","text":"<p>This block allows you to control the angle of a servo motor. It contains two parameters. The first is a drop-down list of valid PINs. The second specifies the angle in degrees. The value is limited to be between 0 and 180.</p>"},{"location":"robohat_blocks/#reporter-blocks","title":"Reporter Blocks","text":""},{"location":"robohat_blocks/#read-digital","title":"Read Digital","text":"<p>This block allows you to read the current state of a digital input pin. It has one parameter, a drop-down list containing all the valid PINs. It reports a value of zero or one.</p>"},{"location":"robohat_blocks/#read-analog","title":"Read Analog","text":"<p>This block allows you to read the current state of an analog input pin. It has one parameter, a drop-down list containing all the valid Pins. It reports a value between 0 and 1023.</p>"},{"location":"robohat_blocks/#read-mpu","title":"Read MPU","text":"<p>This block allows you to read any of the MPU9250 registers selected in the drop-down list:</p> <ul> <li>AX: Accelerometer X Register</li> <li>AY: Accelerometer Y Register</li> <li> <p>AZ: Accelerometer Z Register</p> </li> <li> <p>GX: GyroScope X Register</p> </li> <li>GY: GyroScope Y Register</li> <li> <p>GZ: GyroScope Z Register</p> </li> <li> <p>MX: Magnetometer X Register</p> </li> <li>MY: Magnetometer Y Register</li> <li> <p>MZ: Magnetometer Z Register</p> </li> <li> <p>Temperature</p> </li> </ul>"},{"location":"robohat_blocks/#read-ina","title":"Read INA","text":"<p>This block allows you to read any of the INA219 registers selected in the drop-down list:</p> <ul> <li>V: Bus Voltage</li> <li>A: Bus Current</li> <li>Supply: Supply Voltage</li> <li>Shunt: Shunt Voltage</li> <li>Power: Power</li> <li>Power: Power</li> </ul>"},{"location":"rpi/","title":"No Additional Files Are Required For The Raspberry Pi","text":"<p>IMPORTANT NOTE: Raspberry PI 5 is not supported.</p> <p>Make sure that you have installed s3-extend on your Raspberry Pi, as explained in the Preparing Your Computer section of this document.</p> <p>You may skip to the next section.</p>"},{"location":"rpi_blocks/","title":"Raspberry Pi","text":""},{"location":"rpi_blocks/#the-raspberry-pi-blocks","title":"The Raspberry Pi Blocks","text":"<p>The blocks consist of a set of command blocks that are rectangular in shape and reporter blocks rounded in shape.</p> <p>Pin numbers are expressed as GPIO pin numbers.</p>"},{"location":"rpi_blocks/#connecting-to-a-local-browser-versus-a-remote-browser","title":"Connecting To A Local Browser Versus A Remote Browser","text":"<p>For the Raspberry Pi extension, you can run Scratch 3 on a local browser or a browser on your PC.</p> <p>For remote operation, you must specify the Raspberry Pi's WiFi or Ethernet address in the Remote IP Address block.</p> <p>NOTE: It is recommended that if you wish to access a Raspberry Pi using a remote browser, that you install and use the offline version of the Scratch 3 OneGPIO editor. The reason is, using an online version  will most likely result in a security error.</p>"},{"location":"rpi_blocks/#command-blocks","title":"Command Blocks","text":""},{"location":"rpi_blocks/#remote-ip-address","title":"Remote IP Address","text":"<p>If you wish to control the Raspberry Pi from a browser running on your PC, enter the  Raspberry Pi's IP address into this block. This block should be executed before any of the other Raspberry Pi blocks and executed only once.</p> <p></p> <p>If you wish to use a local browser running on the Raspberry Pi, do not use the Remote IP block.</p> <p></p>"},{"location":"rpi_blocks/#write-digital","title":"Write Digital","text":"<p>This block allows you to select a pin and set its output to either a one or zero. It has two parameters. The first is a drop-down list of valid PINs. The second parameter is the output value. It also is a drop-down list and contains the values zero and one.</p>"},{"location":"rpi_blocks/#write-pwm","title":"Write PWM","text":"<p>This block allows you to select a pin and set its PWM output to be a value between 0 and 100%. It has two parameters. The first is a drop-down list of valid PINs. The second parameter allows you to fill in a PWM value. If you use a PWM value of less than zero, it will be set to 0 internally. If you set the value to greater than 100, it will be set to 100.</p>"},{"location":"rpi_blocks/#tone","title":"Tone","text":"<p>If you connect a Piezo type buzzer to a pin, this block will generate a tone on the pin for the frequency and duration specified. It contains three parameters. The first is a drop-down list of valid PINs. The second allows you to specify the frequency of the tone in Herz. The third parameter specifies the tone duration in milliseconds. If a value greater than 5000 is entered, the value will be set to 5000 internally, limiting the maximum playing time to 5 seconds.</p>"},{"location":"rpi_blocks/#write-servo","title":"Write Servo","text":"<p>This block allows you to control the angle of a servo motor. It contains two parameters. The first is a drop-down list of valid PINs. The second specifies the angle in degrees. The value is limited to be between 0 and 180.</p>"},{"location":"rpi_blocks/#reporter-blocks","title":"Reporter Blocks","text":""},{"location":"rpi_blocks/#read-digital","title":"Read Digital","text":"<p>This block allows you to read the current state of a digital input pin. It has one parameter, a drop-down list containing all the valid PINs. It reports a value of zero or one.</p>"},{"location":"rpi_blocks/#read-sonar","title":"Read Sonar","text":"<p>This block allows you to connect an HC-SR04 type device. It has two parameters, both containing a drop-down list of valid PINs. The first parameter allows you to select a trigger pin, and the second an echo pin. It returns the measured distance in centimeters.</p>"},{"location":"rpi_pico/","title":"Raspberry Pi Pico","text":"<p>Before using the Raspberry Pi Pico extension, install the  Telemetrix4RpiPico server software onto the Pico. </p> <p>This link contains the installation instructions.</p>"},{"location":"rpi_pico_blocks/","title":"Raspberry Pi Pico","text":""},{"location":"rpi_pico_blocks/#the-raspberry-pi-pico-blocks","title":"The Raspberry Pi Pico Blocks","text":"<p>The blocks consist of a set of command blocks that are rectangular in shape and reporter blocks rounded in shape.</p>"},{"location":"rpi_pico_blocks/#command-blocks","title":"Command Blocks","text":""},{"location":"rpi_pico_blocks/#write-digital","title":"Write Digital","text":"<p>This block allows you to select a pin and set its output to either a one or zero. It has two parameters. The first is a drop-down list of valid PINs. The second parameter is the output value. It also is a drop-down list and contains the values zero and one.</p> <p>NOTE: Pin 25 controls the board LED.</p>"},{"location":"rpi_pico_blocks/#write-pwm","title":"Write PWM","text":"<p>This block allows you to select a pin and set its PWM output to be a value between 0 and 100%. It has two parameters. The first is a drop-down list of valid PINs. The second parameter allows you to fill in a PWM value. If you use a PWM value of less than zero, it will be set to 0 internally. If you set the value to greater than 100, it will be set to 100.</p> <p>NOTE: Pin 25 controls the board LED.</p>"},{"location":"rpi_pico_blocks/#write-servo","title":"Write Servo","text":"<p>This block allows you to control the angle of a servo motor. It contains two parameters. The first is a drop-down list of valid PINs. The second specifies the angle in degrees. The value is limited to be between 0 and 180.</p>"},{"location":"rpi_pico_blocks/#reporter-blocks","title":"Reporter Blocks","text":""},{"location":"rpi_pico_blocks/#read-digital","title":"Read Digital","text":"<p>This block allows you to read the current state of a digital input pin. It has two parameters, a drop-down list containing all the valid GPIO pins and a parameter to enable or disable the pull-up resistor on the Pico GPIO pin. It reports the raw value of zero or one.</p>"},{"location":"rpi_pico_blocks/#read-analog","title":"Read Analog","text":"<p>This block allows you to read the current state of an analog input pin identified by its ADC number.</p> ADC Number GPIO Pin Number 0 26 1 27 2 28 3 Temperature Sensor <p>It has one parameter, a drop-down list containing all the ADC Pins. It reports a value between 0 and 4095. </p>"},{"location":"rpi_pico_blocks/#read-sonar","title":"Read Sonar","text":"<p>This block allows you to connect an HC-SR04 type device. It has two parameters, both containing a drop-down list of valid PINs. The first parameter allows you to select a trigger pin, and the second an echo pin. It returns the measured distance in centimeters.</p>"},{"location":"s3-extend/","title":"Install s3-extend","text":""},{"location":"s3-extend/#installing-the-python-extension-servers","title":"Installing The Python Extension Servers","text":"<p>Follow these instructions to create a virtual environment.</p> <p>After activating the virtual environment, open a terminal window and type:</p> <pre><code>pip install s3-extend\n</code></pre> <p>If you are installing on a Raspberry Pi 3, or 4 install the pigpio library by  typing:</p> <pre><code>pip install pigpio\n</code></pre> <p>IMPORTANT NOTE: Raspberry PI 5 is not supported.</p> <p>  It may take several minutes to download and install the necessary Python packages to support all the extensions.</p>"},{"location":"s3-local/","title":"Starting Scratch3 Offline","text":""},{"location":"s3-local/#launching-scratch-3-offline","title":"Launching Scratch 3 Offline","text":"<p>First, you need to download the files. Go to the s3onegpio GitHub Repository, gh-pages branch.</p> <p>Click on the green Clone or download button at the upper right. </p> <p></p> <p>Save the file and then unzip it. This will create a directory called s3onegpio-gh-pages. </p> <p>Using your file explorer tool, look for index.html in the s3onegpio-gh-pages directory and double click on index.html. The Scratch 3 OneGPIO editor should open.</p> <p></p> <p>To  access the OneGPIO extensions, click on the Extension Icon at the lower  left of the Scratch 3 Editor Window. </p> <p></p> <p>Scroll down and select the OneGPIO extension you wish to use. You may then choose additional OneGPIO extensions. Go to the \"Using OneGPIO Extension Blocks\" section for information on block usage.</p> <p></p>"},{"location":"s3-web/","title":"Starting Scratch3 Online","text":""},{"location":"s3-web/#launching-scratch-3-online","title":"Launching Scratch 3 Online","text":"<p>If you have a reliable internet connection and wish to run Scratch 3 OneGPIO online, click this link.</p> <p>To access the OneGPIO extensions, click on the Extension Icon at  the lower left of the Scratch 3 Editor Window.</p> <p></p> <p>Scroll down and select the OneGPIO extension you wish to use. You may then choose additional OneGPIO extensions. Go to the \"Using OneGPIO Extension Blocks\" section for information on block usage.</p> <p></p>"},{"location":"shutdown/","title":"Performing A Clean Shutdown","text":"<p>To properly close the s3a, s3e, s3p, s3pup, s3r, s3rp, and s3rh launchers, go into the  command or terminal window and type Control-C. This will ensure that all of the processes started by a launcher are killed correctly.</p> <p>If you kill the command or terminal or window before pressing Control-C, processes may be left in a running state, preventing you from restarting the launcher. If you forget to use Control-C and cannot restart the extension with its associated launcher, reboot your computer to kill the running processes.</p>"},{"location":"translate/","title":"Contributing Block Translations","text":""},{"location":"translate/#block-text-and-alert-translations","title":"Block Text And Alert Translations","text":"<p>When you select a language by clicking on the globe icon in the Scratch editor, if a translation is available for the selected language, the OneGPIO Scratch block text appears in that language.</p> <p></p> <p>If translation for your selected language is not available, then the text will be in English.</p> <p>If your language is not currently supported and you wish to provide a translation, I encourage you to do so. Not only will you be listed as a contributor, but others who are speakers of your language will thank you as well.</p>"},{"location":"translate/#providing-a-translation","title":"Providing A Translation","text":"<p>To provide a translation for the Arduino, ESP-32, ESP-8266, and Raspberry Pi extensions, you simply update the translate.txt file. For the Picoboard, you update the picoboard.txt file. And for the CircuitPlayground Express, you update the playground_express.txt file. You then either generate a GitHub pull request or if you are unfamiliar with Git and pull requests, submit it as an issue to https://github.com/MrYsLab/s3onegpio/issues. If you submit the translation as an issue, please call the issue:</p> <p>Translation For LANGUAGE BEING ADDED, </p> <p>where LANGUAGE BEING ADDED is the name of your language.</p> <p>I will then incorporate your translation into the source code and update the Scratch 3 Editor to contain your translation.</p>"},{"location":"translate/#translationstxt-picoboardtxt-and-playground_expresstxt","title":"Translations.txt, Picoboard.txt, And Playground_Express.txt","text":"<p>The translations.txt, picoboard.txt, and playground_express.txt files contain the text for all  of the blocks and alerts for the OneGPIO extensions.</p> <p>Let's look at the Sonar block to understand what needs to be added to the translations.txt file.</p> <p>Here we see the English and Brazilian Portuguese blocks for the Sonar  block.</p> <p></p> <p></p> <p>Here is the language specification for the block in translation.txt.</p> <pre><code>const FormSonarRead = {\n    'pt-br': 'Ler Dist\u00e2ncia: Sonar em T[TRIGGER_PIN] E[ECHO_PIN]',\n    'pt': 'Ler Dist\u00e2ncia: Sonar em T[TRIGGER_PIN] E[ECHO_PIN]',\n    'en': 'Read SONAR  T [TRIGGER_PIN]  E [ECHO_PIN]'\n};\n</code></pre> <p>Each language has its own line in the list of translations, and each line begins with the language's identifier. In this case, pt-br for Brazilian Portuguese, pt for Portuguese, and en for English.</p> <p>Any text between square brackets is a placeholder for a parameter field in the block. Do not translate the text within the square brackets, and please use them as is, no matter the alphabet being used. All other text should be translated.</p> <p>You are free to use as many words as you need.  The parameters (text  in square brackets) may be placed anywhere within the translation  that makes sense for your language.</p>"},{"location":"translate/#alert-translation","title":"Alert Translation","text":"<p>Alerts do not contain any parameters.</p> <p>The alert for the ESP-8266 is formatted a little differently. </p> <pre><code>// ESP-8266 Alert\nconst FormAlrt = {\n    'pt-br': {\n        title: \"Aten\u00e7\u00e3o\",\n        text: \"Informe o endere\u00e7o IP da placa ESP-8266 no bloco apropriado\",\n        icon: \"info\",\n    },\n    'pt': {\n        title: \"Aten\u00e7\u00e3o\",\n        text: \"Informe o endere\u00e7o IP da placa ESP-8266 no bloco apropriado\",\n        icon: \"info\",\n    },\n    'en': {\n        title: \"Reminder\",\n        text: \"Enter the IP Address of the ESP-8266 Into The IP Address Block\",\n        icon: \"info\",\n    }\n};\n</code></pre> <p>For this translation, translate the text in the \"title\" and \"text\" fields, but do not translate the \"icon\" field. Please retain the words title, text, and icon in English.</p> <p>If you have any questions, please feel free to email me at: MisterYsLab@gmail.com</p>"},{"location":"under_the_hood/","title":"The OneGPIO Gateways and Launchers","text":""},{"location":"under_the_hood/#scratch-3-onegpio-software-components","title":"Scratch 3 OneGPIO Software Components","text":"<p>The Scratch 3 OneGPIO extensions consist of two major components. </p>"},{"location":"under_the_hood/#the-modified-scratch-3-editor","title":"The Modified Scratch 3 Editor","text":"<p>The first of the major components is the modified Scratch 3 editor,  depicted as the terminal  on the left side of the illustration above. The modified editor uses all of the Scratch 3 team's code but adds the  additional code to create the custom Scratch blocks to support the OneGPIO extensions.</p> <p>If you would like additional information about how the OneGPIO extensions were created and added to the Scratch 3 editor, please refer to the Bots In Pieces blog.</p>"},{"location":"under_the_hood/#the-onegpio-extension-servers","title":"The OneGPIO Extension Servers","text":"<p>The second major component for each of the OneGPIO extensions is the  Extension Server, depicted in the center of the illustration.</p> <p>Each board type has a specific associated Extension Server, using the  Python Banyan Framework to implement  the   OneGPIO messaging protocol.</p> <p>The OneGPIO design concept assures excellent performance and simplifies the   design and implementation for each extension server.</p> <p>Each server utilizes three Python Banyan components. The first is the  Backplane,   a shared message distributor used by all of the extension servers. </p> <p>Each  Extension Server utilizes a unique instance of the  WebSocket Gateway.  It provides a communication channel between the Scratch 3 editor running in the browser  and the Python code interacting   with microcontroller hardware. A  unique IP port number is assigned to each WebSocket Gateway.</p> <p>Finally, each Extension Server supports its connected microcontroller using a unique  Hardware Gateway.  The Hardware Gateway translates the platform-independent OneGPIO control and report  messages to hardware-specific messages.</p> <p>The transport mechanism used between the Hardware Gateway and its  associated micro-controller varies, depending upon the micro-controller  in use. For example, the Arduino uses a hardwired, USB-Serial interface  is used. The Raspberry Pi, ESP-32, and ESP-8266 use a WiFi connection.</p>"},{"location":"usage/","title":"How To Use The OneGPIO Extensions","text":""},{"location":"usage/#an-overview-of-using-the-onegpio-extensions","title":"An Overview Of Using The OneGPIO Extensions","text":"<p>Now that all the necessary software is installed on your computer and your physical computing device, it is time to try things out.</p> <p>Here is a brief recommended procedure for using Scratch 3 with your physical computing projects:</p> <p>Step 1: With the power disconnected from your microcontroller,  attach the sensors and actuators to it. Never add or remove sensors or  actuators with power applied\u2014you may permanently damage your microcontroller.</p> <p>Step 2: Apply power to the micro-controller.</p> <p>Step 3: Start the OneGPIO server code by opening a terminal  window for each microcontroller you wish to use. Then, enter the command for the specific micro-controller:</p> <ul> <li>s32 - for the ESP-32</li> <li>s3a - for the Arduino</li> <li>s3c - for the Adafruit Circuit Playground Express</li> <li>s3e - for the ESP-8266</li> <li>s3p - for the Picoboard</li> <li>s3pup - for the Pupper Robot</li> <li>s3r - for the Raspberry Pi</li> <li>s3rp for the Raspberry Pi Pico</li> <li>s3rh - for the RoboHAT MM1</li> </ul> <p>Important Note For macOS Users</p> <p>You may need to start the OneGPIO server using sudo. For Example:</p> <pre><code>sudo s3a\n</code></pre> <p>Step 4: Start Scratch 3, select an extension and create and run your Scratch scripts. If you are using the ESP-8266 or ESP032 extension, you must use  the Connect IP Address block  to connect to the ESP-8266 or ESP032. </p> <p>Step 5: To power down, dismiss the OneGPIO server by going to the window opened in step 3 and pressing Control-C. You may may need to do this twice. Finally, dismiss the Web Browser tab running Scratch 3. SPECIAL NOTE: Please use Control-C before dismissing the window. If you dismiss the window without pressing Control-C first, the next time you start the server, it may fail. In that case, reboot your computer, and the server should succeed.</p> <p>There is more detail about these steps in the following sections. Please read those sections before proceeding.</p> <p>NOTE: You may run a single micro-controller or all simultaneously on a single computer, but only a single instance of a microcontroller may be run at a time. For example, you may run a Raspberry Pi and an Arduino simultaneously and use one to control the other. However, you may not run two of the same type of controllers at the same.</p> <p>Running two boards that use a serial link is an advanced and experimental feature and not recommended nor officially supported. An example would be running an Arduino and a Picoboard on the same computer at the same time. If you wish to run two boards that use a serial link, you may have to manually  specify the COM port for one of the boards.  This is done by using  the -c option in the launcher. For example, to start the Picoboard extension  forcing it to use COM7, you would start the launcher with:</p> <pre><code> s3p -c com7\n</code></pre>"}]}